<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PCB博客</title>
  <subtitle>快乐记录每一天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bin2415.github.io/"/>
  <updated>2017-05-16T08:55:02.918Z</updated>
  <id>http://bin2415.github.io/</id>
  
  <author>
    <name>binpang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Bomb</title>
    <link href="http://bin2415.github.io/2017/05/16/Bomb/"/>
    <id>http://bin2415.github.io/2017/05/16/Bomb/</id>
    <published>2017-05-16T08:46:22.000Z</published>
    <updated>2017-05-16T08:55:02.918Z</updated>
    
    <content type="html"><![CDATA[<p>x86上的二进制炸弹对于反汇编的练习来说还是比较经典的，由于网上有很多该程序的讲解，所以在此我打算写一下arm平台上的二进制拆炸弹这个游戏。</p>
<h2 id="环境的搭建"><a href="#环境的搭建" class="headerlink" title="环境的搭建"></a>环境的搭建</h2><ul>
<li><p>由于是arm平台的环境，所以需要在linux环境下安装一个模拟器，在此我选择了qemu该模拟器，具体操作如下(该操作对Ubuntu环境有效，其他linux版本可自行查找方法)</p>
<p>  sudo apt-get install qemu-user</p>
</li>
<li><p>运行ARM指令集模拟器并运行开启gdbserver和运行bomb_1程序</p>
<p>  qemu-arm -g 8009 bomb_1</p>
</li>
</ul>
<p>其中，-g参数是为了添加调试信息，为了使远程gdb调试能够起作用，8009为自定义的端口号。</p>
<ul>
<li><p>另外启动一个终端，通过命令远程开启gdb调试器并加载待调试程序。</p>
<p>  arm-linux-gdb bomb_1</p>
</li>
<li><p>输命令来连接模拟器中的gdbserver</p>
<p>  target  remote  localhost:8009</p>
</li>
<li><p>辅助工具IDA pro。IDA pro是一款静态分析的反汇编工具，利用它可以查看数据段的具体数据，用起来十分方便。</p>
</li>
</ul>
<hr>
<h2 id="具体分析"><a href="#具体分析" class="headerlink" title="具体分析"></a>具体分析</h2><h3 id="Phase-1"><a href="#Phase-1" class="headerlink" title="Phase 1"></a>Phase 1</h3><h4 id="Arm指令"><a href="#Arm指令" class="headerlink" title="Arm指令"></a>Arm指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">0000844c &lt;phase_1&gt;:</div><div class="line">844c:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">8450:	e28db004 	add	fp, sp, #4</div><div class="line">8454:	e24dd008 	sub	sp, sp, #8</div><div class="line">8458:	e50b0008 	str	r0, [fp, #-8]</div><div class="line">845c:	e51b0008 	ldr	r0, [fp, #-8]</div><div class="line">8460:	e59f101c 	ldr	r1, [pc, #28]	; 8484 &lt;phase_1+0x38&gt;</div><div class="line">8464:	eb000241 	bl	8d70 &lt;strings_not_equal&gt;</div><div class="line">8468:	e1a03000 	mov	r3, r0</div><div class="line">846c:	e3530000 	cmp	r3, #0</div><div class="line">8470:	0a000000 	beq	8478 &lt;phase_1+0x2c&gt;</div><div class="line">8474:	eb000321 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8478:	e24bd004 	sub	sp, fp, #4</div><div class="line">847c:	e8bd4800 	pop	&#123;fp, lr&#125;</div><div class="line">8480:	e12fff1e 	bx	lr</div><div class="line">8484:	0006483c 	.word	0x0006483c</div></pre></td></tr></table></figure>
<h4 id="反汇编分析"><a href="#反汇编分析" class="headerlink" title="反汇编分析"></a>反汇编分析</h4><p>从标重点的三行汇编可以看出，该代码从把输入的字符串为参数1，把8484里存的字符串作为参数2，然后再调用函数strings_not_equal,判断两个函数是否相等。所以关键是找8484处的地址存的字符串。有IDA pro可以看出8484处存的是数据段6483c处存的字符串，所以用ida可以找出该处的字符串。</p>
<h4 id="密码"><a href="#密码" class="headerlink" title="密码"></a>密码</h4><p><img src="http://i.imgur.com/BBdX0Ys.png" alt=""></p>
<p>密码为Let’s begin now!</p>
<p>利用gdb及arm服务器验证该答案正确。</p>
<hr>
<h3 id="Phase-2"><a href="#Phase-2" class="headerlink" title="Phase 2"></a>Phase 2</h3><h4 id="Arm指令-1"><a href="#Arm指令-1" class="headerlink" title="Arm指令"></a>Arm指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">00008488 &lt;phase_2&gt;:</div><div class="line">8488:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">848c:	e28db004 	add	fp, sp, #4</div><div class="line">8490:	e24dd028 	sub	sp, sp, #40	; 0x28</div><div class="line">8494:	e50b0028 	str	r0, [fp, #-40]	; 0xffffffd8</div><div class="line">8498:	e24b3020 	sub	r3, fp, #32</div><div class="line">849c:	e51b0028 	ldr	r0, [fp, #-40]	; 0xffffffd8</div><div class="line">84a0:	e1a01003 	mov	r1, r3</div><div class="line">84a4:	eb0001f4 	bl	8c7c &lt;read_six_numbers&gt;			   ○1</div><div class="line">////////////////////////////////////////////////</div><div class="line">84a8:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0 </div><div class="line">84ac:	e3530001 	cmp	r3, #1</div><div class="line">84b0:	0a000000 	beq	84b8 &lt;phase_2+0x30&gt; ○2</div><div class="line">84b4:	eb000311 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">84b8:	e3a03001 	mov	r3, #1</div><div class="line">84bc:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">84c0:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">84c4:	e2432001 	sub	r2, r3, #1</div><div class="line">84c8:	e3e0301b 	mvn	r3, #27</div><div class="line">84cc:	e1a02102 	lsl	r2, r2, #2</div><div class="line">84d0:	e24b0004 	sub	r0, fp, #4</div><div class="line">84d4:	e0802002 	add	r2, r0, r2</div><div class="line">84d8:	e0823003 	add	r3, r2, r3</div><div class="line">84dc:	e5933000 	ldr	r3, [r3]</div><div class="line">84e0:	e51b2008 	ldr	r2, [fp, #-8]</div><div class="line">84e4:	e2421001 	sub	r1, r2, #1 ○3</div><div class="line">84e8:	e0020391 	mul	r2, r1, r3</div><div class="line">84ec:	e51b1008 	ldr	r1, [fp, #-8]</div><div class="line">84f0:	e3e0301b 	mvn	r3, #27</div><div class="line">84f4:	e1a01101 	lsl	r1, r1, #2</div><div class="line">84f8:	e24b0004 	sub	r0, fp, #4</div><div class="line">84fc:	e0801001 	add	r1, r0, r1</div><div class="line">8500:	e0813003 	add	r3, r1, r3  ○4</div><div class="line">8504:	e5933000 	ldr	r3, [r3]</div><div class="line">//////////////////////////////////////////////</div><div class="line"></div><div class="line">8508:	e1520003 	cmp	r2, r3</div><div class="line">850c:	0a000000 	beq	8514 &lt;phase_2+0x8c&gt;   ○5</div><div class="line">8510:	eb0002fa 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">//////////////////////////////////////////////</div><div class="line">8514:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">8518:	e2833001 	add	r3, r3, #1</div><div class="line">851c:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">8520:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">8524:	e3530005 	cmp	r3, #5</div><div class="line">8528:	daffffe4 	ble	84c0 &lt;phase_2+0x38&gt;</div><div class="line">852c:	e24bd004 	sub	sp, fp, #4</div><div class="line">8530:	e8bd4800 	pop	&#123;fp, lr&#125;</div><div class="line">8534:	e12fff1e 	bx	lr</div></pre></td></tr></table></figure>
<h4 id="反汇编分析-1"><a href="#反汇编分析-1" class="headerlink" title="反汇编分析"></a>反汇编分析</h4><p>该炸弹的逻辑是for循环。<br>○1处那两行由函数名可以看出为从终端读取六个数，并将其存入一个数组中，且地址从fp-32开始。○2处那四行是读取数组第一个数判断是否为1，如果是1继续判断，如果不是就会explode_bomb。如果是1 的话就会使i = 1到5，然后判断每一个数值。○3那四行及以上几行的逻辑是取出a[i-1]的值，并将a[i-1]*(i-1),然后存入r2中。○4那两行及以上几行的逻辑是取出a[i]的数据，并将其存入r3中。○5处的逻辑是判断r2和r3的值，如果相等则i+1，继续判断，如果不行等则explode_bomb。<br>其大致的c语言逻辑如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">if(a[0] != 1)</div><div class="line"></div><div class="line">	explode_bomb();</div><div class="line">for(i = 1;i &lt;= 5;i++)</div><div class="line">&#123;</div><div class="line">	if(a[i] != a[i-1]*(i-1))</div><div class="line">		explode_bomb();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>所以a[0] = 1;a[1] = a[2] = a[3] = a[4] = a[5] = 0;</p>
<h4 id="密码-1"><a href="#密码-1" class="headerlink" title="密码"></a>密码</h4><p>1 0 0 0 0 0</p>
<hr>
<h3 id="Phase-3"><a href="#Phase-3" class="headerlink" title="Phase 3"></a>Phase 3</h3><h4 id="arm指令"><a href="#arm指令" class="headerlink" title="arm指令"></a>arm指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div></pre></td><td class="code"><pre><div class="line">00008538 &lt;phase_3&gt;:</div><div class="line">8538:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">853c:	e28db004 	add	fp, sp, #4</div><div class="line">8540:	e24dd020 	sub	sp, sp, #32</div><div class="line">8544:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8</div><div class="line">8548:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8</div><div class="line">854c:	e59f119c 	ldr	r1, [pc, #412]	; 86f0 &lt;phase_3+0x1b8&gt;○1</div><div class="line">8550:	e24b2014 	sub	r2, fp, #20</div><div class="line">8554:	e24b300d 	sub	r3, fp, #13</div><div class="line">8558:	e24bc00c 	sub	ip, fp, #12</div><div class="line">855c:	e58dc000 	str	ip, [sp]</div><div class="line">8560:	eb000976 	bl	ab40 &lt;_IO_sscanf&gt;</div><div class="line">8564:	e1a03000 	mov	r3, r0</div><div class="line">8568:	e3530002 	cmp	r3, #2</div><div class="line">856c:	ca000000 	bgt	8574 &lt;phase_3+0x3c&gt; ○2  </div><div class="line">8570:	eb0002e2 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">///////////////////////////////////////////////////</div><div class="line">8574:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec</div><div class="line">8578:	e3530007 	cmp	r3, #7</div><div class="line">857c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]</div><div class="line">8580:	ea000041 	b	868c &lt;phase_3+0x154&gt;</div><div class="line">8584:	000085a4 	.word	0x000085a4</div><div class="line">8588:	000085c4 	.word	0x000085c4</div><div class="line">858c:	000085e0 	.word	0x000085e0   ○3</div><div class="line">8590:	00008600 	.word	0x00008600  </div><div class="line">8594:	0000861c 	.word	0x0000861c </div><div class="line">8598:	00008638 	.word	0x00008638</div><div class="line">859c:	00008658 	.word	0x00008658</div><div class="line">85a0:	00008670 	.word	0x00008670</div><div class="line">/////////////////////////////////////////////////</div><div class="line">85a4:	e3a03071 	mov	r3, #113	; 0x71   ○4</div><div class="line">85a8:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">85ac:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">85b0:	e59f313c 	ldr	r3, [pc, #316]	; 86f4 &lt;phase_3+0x1bc&gt;</div><div class="line">85b4:	e1520003 	cmp	r2, r3</div><div class="line">85b8:	0a000037 	beq	869c &lt;phase_3+0x164&gt;</div><div class="line">85bc:	eb0002cf 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">85c0:	ea000042 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">85c4:	e3a03062 	mov	r3, #98	; 0x62○5</div><div class="line">85c8:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">85cc:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">85d0:	e35300d6 	cmp	r3, #214	; 0xd6</div><div class="line">85d4:	0a000032 	beq	86a4 &lt;phase_3+0x16c&gt;</div><div class="line">85d8:	eb0002c8 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">85dc:	ea00003b 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">85e0:	e3a03062 	mov	r3, #98	; 0x62○6</div><div class="line">85e4:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">85e8:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">85ec:	e59f3104 	ldr	r3, [pc, #260]	; 86f8 &lt;phase_3+0x1c0&gt;</div><div class="line">85f0:	e1520003 	cmp	r2, r3</div><div class="line">85f4:	0a00002c 	beq	86ac &lt;phase_3+0x174&gt;</div><div class="line">85f8:	eb0002c0 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">85fc:	ea000033 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">8600:	e3a0306b 	mov	r3, #107	; 0x6b   ○7</div><div class="line">8604:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8608:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">860c:	e35300fb 	cmp	r3, #251	; 0xfb</div><div class="line">8610:	0a000027 	beq	86b4 &lt;phase_3+0x17c&gt;</div><div class="line">8614:	eb0002b9 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8618:	ea00002c 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">861c:	e3a0306f 	mov	r3, #111	; 0x6f○8</div><div class="line">8620:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8624:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8628:	e35300a0 	cmp	r3, #160	; 0xa0</div><div class="line">862c:	0a000022 	beq	86bc &lt;phase_3+0x184&gt;</div><div class="line">8630:	eb0002b2 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8634:	ea000025 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">8638:	e3a03074 	mov	r3, #116	; 0x74○9</div><div class="line">863c:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8640:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">8644:	e59f30b0 	ldr	r3, [pc, #176]	; 86fc &lt;phase_3+0x1c4&gt;</div><div class="line">8648:	e1520003 	cmp	r2, r3</div><div class="line">864c:	0a00001c 	beq	86c4 &lt;phase_3+0x18c&gt;</div><div class="line">8650:	eb0002aa 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8654:	ea00001d 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">8658:	e3a03076 	mov	r3, #118	; 0x76○10</div><div class="line">865c:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8660:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8664:	e3530fc3 	cmp	r3, #780	; 0x30c</div><div class="line">8668:	0a000000 	beq	8670 &lt;phase_3+0x138&gt;</div><div class="line">866c:	eb0002a3 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8670:	e3a03062 	mov	r3, #98	; 0x62○11</div><div class="line">8674:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8678:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">867c:	e3530f83 	cmp	r3, #524	; 0x20c</div><div class="line">8680:	0a000011 	beq	86cc &lt;phase_3+0x194&gt;</div><div class="line">8684:	eb00029d 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8688:	ea000010 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">868c:	e3a03078 	mov	r3, #120	;0x78 ○12</div><div class="line">8690:	e54b3005 	strb	r3, [fp, #-5]</div><div class="line">8694:	eb000299 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8698:	ea00000c 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">869c:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86a0:	ea00000a 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86a4:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86a8:	ea000008 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86ac:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86b0:	ea000006 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86b4:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86b8:	ea000004 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86bc:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86c0:	ea000002 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86c4:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86c8:	ea000000 	b	86d0 &lt;phase_3+0x198&gt;</div><div class="line">86cc:	e1a00000 	nop			; (mov r0, r0)</div><div class="line">86d0:	e55b300d 	ldrb	r3, [fp, #-13]</div><div class="line">86d4:	e55b2005 	ldrb	r2, [fp, #-5]</div><div class="line">86d8:	e1520003 	cmp	r2,r3○13</div><div class="line">86dc:	0a000000 	beq	86e4 &lt;phase_3+0x1ac&gt;</div><div class="line">86e0:	eb000286 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">86e4:	e24bd004 	sub	sp, fp, #4</div><div class="line">86e8:	e8bd4800 	pop	&#123;fp, lr&#125;</div><div class="line">86ec:	e12fff1e 	bx	lr</div><div class="line">86f0:	00064850 	.word	0x00064850</div><div class="line">86f4:	00000309 	.word	0x00000309</div><div class="line">86f8:	000002f3 	.word	0x000002f3</div><div class="line">86fc:	000001ca 	.word	0x000001ca</div></pre></td></tr></table></figure>
<h4 id="反汇编分析-2"><a href="#反汇编分析-2" class="headerlink" title="反汇编分析"></a>反汇编分析</h4><p>○1处将pc+412的数据传入r1，借助IDA pro可以查看pc+412引用的是<br>00064850处的数据，如图：</p>
<p><img src="http://i.imgur.com/YQ9jB6j.png" alt=""></p>
<p>所以该处的数据为”%d %c %d”,由此可知输入的数据的形式为int，char，int。<br>○2处判断第一个参数int是否大于2，如果大于2则进行switch操作，如果不是则explode_bomb。○3处是对输入的第一个int进行switch判断，其伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">switch(int c)</div><div class="line">&#123;</div><div class="line">	case 0:</div><div class="line">		jmp 85a4;</div><div class="line">		break;</div><div class="line">	case 1:</div><div class="line">		jmp 85c4;</div><div class="line">		break;</div><div class="line">	case 2:</div><div class="line">		jmp 85e0;</div><div class="line">		break;</div><div class="line">	case 3:</div><div class="line">		jmp 8600;</div><div class="line">		break;</div><div class="line">	case 4:</div><div class="line">		jmp 861c;</div><div class="line">		break;</div><div class="line">	case 5:</div><div class="line">		jmp 8638;</div><div class="line">		break;</div><div class="line">	case 6:</div><div class="line">		jmp 8658;</div><div class="line">		break;</div><div class="line">	case 7:</div><div class="line">		jmp 8670;</div><div class="line">		break;</div><div class="line">	default:</div><div class="line">	jmp 868c;</div><div class="line">		break;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>○4-○11是对case 0 –case 7这八种情况的具体判断，其逻辑都是一样的，所以在此只分析一种情况（由于必须要求第一个int大于2，所以分析为3,4,5,6,7这五种情况）。现分析○7，首先将0x6b放入fp-5,然后将fp-12的值(即第三个传入的int的值)与0xfb(十进制为251)进行比较，如果相等则跳转86b4,如果不是的话就会explode_bomb;然后相等的话跳转86b4，我们发现从869c到86cc的逻辑都是先nop，什么都不做，然后再b    86d0 <phase_3+0x198>，所以现在就到了86d0的代码块○13，其逻辑为先取fp-13(输入的第二个参数char)放到r3，然后再去fp-5的值放到r2，其中fp-5的值为刚才放的0x6b，查ascii表为k，所以结果就为3 k 0xfb,其余的case 为4,5,6,7的情况和case 3的情况类似。代码○12为default情况，其逻辑是先把0x78存入fp-5,然后就explode_bomb;所以总之就是default情况就会碰到炸弹。</phase_3+0x198></p>
<h4 id="密码-2"><a href="#密码-2" class="headerlink" title="密码"></a>密码</h4><p>3 k 0xfb</p>
<hr>
<h3 id="Phase-4"><a href="#Phase-4" class="headerlink" title="Phase 4"></a>Phase 4</h3><h4 id="Arm指令-2"><a href="#Arm指令-2" class="headerlink" title="Arm指令"></a>Arm指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">00008760 &lt;phase_4&gt;:</div><div class="line">8760:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">8764:	e28db004 	add	fp, sp, #4</div><div class="line">8768:	e24dd010 	sub	sp, sp, #16</div><div class="line">876c:	e50b0010 	str	r0, [fp, #-16]</div><div class="line">8770:	e51b1010 	ldr	r1, [fp, #-16]</div><div class="line">8774:	e59f2054 	ldr	r2, [pc, #84]	; 87d0 &lt;phase_4+0x70&gt;  ○1</div><div class="line">8778:	e24b3008 	sub	r3, fp, #8</div><div class="line">877c:	e1a00001 	mov	r0, r1</div><div class="line">8780:	e1a01002 	mov	r1, r2</div><div class="line">8784:	e1a02003 	mov	r2, r3</div><div class="line">8788:	eb0008ec 	bl	ab40 &lt;_IO_sscanf&gt;</div><div class="line">878c:	e1a03000 	mov	r3, r0</div><div class="line">8790:	e3530001 	cmp	r3, #1</div><div class="line">8794:	1a000002 	bne	87a4 &lt;phase_4+0x44&gt;</div><div class="line">8798:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">879c:	e3530000 	cmp	r3, #0</div><div class="line">87a0:	ca000000 	bgt	87a8 &lt;phase_4+0x48&gt;  ○2 </div><div class="line">87a4:	eb000255 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">////////////////////////////////////</div><div class="line">87a8:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">87ac:	e1a00003 	mov	r0, r3 ○3 </div><div class="line">87b0:	ebffffd2 	bl	8700 &lt;func4&gt;</div><div class="line">///////////////////////////////////</div><div class="line">87b4:	e1a03000 	mov	r3, r0</div><div class="line">87b8:	e3530008 	cmp	r3, #8</div><div class="line">87bc:	0a000000 	beq	87c4 &lt;phase_4+0x64&gt; ○8</div><div class="line">87c0:	eb00024e 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">87c4:	e24bd004 	sub	sp, fp, #4</div><div class="line">87c8:	e8bd4800 	pop	&#123;fp, lr&#125;</div><div class="line">87cc:	e12fff1e 	bx	lr</div><div class="line">87d0:	0006485c 	.word	0x0006485c</div><div class="line"></div><div class="line">00008700 &lt;func4&gt;:</div><div class="line">8700:	e92d4810 	push	&#123;r4, fp, lr&#125;</div><div class="line">8704:	e28db008 	add	fp, sp, #8</div><div class="line">8708:	e24dd00c 	sub	sp, sp, #12</div><div class="line">870c:	e50b0010 	str	r0, [fp, #-16]</div><div class="line">8710:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8714:	e3530001 	cmp	r3, #1  ○4</div><div class="line">8718:	da00000b 	ble	874c &lt;func4+0x4c&gt;</div><div class="line">////////////////////////////////////////////</div><div class="line">871c:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8720:	e2433001 	sub	r3, r3, #1</div><div class="line">8724:	e1a00003 	mov	r0, r3   ○5</div><div class="line">8728:	ebfffff4 	bl	8700 &lt;func4&gt;</div><div class="line">/////////////////////////////////////////////</div><div class="line">872c:	e1a04000 	mov	r4, r0</div><div class="line">8730:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8734:	e2433002 	sub	r3, r3, #2   ○6</div><div class="line">8738:	e1a00003 	mov	r0, r3</div><div class="line">873c:	ebffffef 	bl	8700 &lt;func4&gt;</div><div class="line">8740:	e1a03000 	mov	r3, r0</div><div class="line">8744:	e0843003 	add	r3, r4, r3</div><div class="line">8748:	ea000000 	b	8750 &lt;func4+0x50&gt;</div><div class="line">874c:	e3a03001 	mov	r3, #1</div><div class="line">8750:	e1a00003 	mov	r0, r3  </div><div class="line">8754:	e24bd008 	sub	sp, fp, #8   ○7</div><div class="line">8758:	e8bd4810 	pop	&#123;r4, fp, lr&#125;</div><div class="line">875c:	e12fff1e 	bx	lr</div></pre></td></tr></table></figure>
<h4 id="反汇编分析-3"><a href="#反汇编分析-3" class="headerlink" title="反汇编分析"></a>反汇编分析</h4><p>○1处是输入的参数的形式，位于87d0处，利用IDA pro找到了87d0引用了0006485C数据段的数据，为</p>
<p><img src="http://i.imgur.com/w0lczaO.png" alt=""></p>
<p>即要求输入一个数字。○2处判断是否是输入的参数是否大于0，如果大于0则继续判断，如果不是则explode_bomb。○3处将输入的数传入r0中作为参数然后调用func4()。○4首先将传入的参数存入fp-16中，然后判断参数是否小于等于1，如果小于等于1的话就跳到○7处，○7处将返回值赋值为1，然后pop返回值和参数；如果大于1的话就到○5，○5和○6的逻辑就是分别让参数-1和-2，然后再分别调用func4，由此可以看出该bomb的逻辑是一个递归的调用。其c语言的伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">func4(int i)</div><div class="line">&#123;</div><div class="line">	if(i &lt; = 1)</div><div class="line">		return 1;</div><div class="line">	else</div><div class="line">		return func4(i-1) + func4(i-2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后看代码块○8，其将func4函数的返回值与8进行比较，如果等于8就通过，否则explode_bomb。所以通过计算可以得出输入的值为5。</p>
<h4 id="密码-3"><a href="#密码-3" class="headerlink" title="密码"></a>密码</h4><p>5</p>
<h3 id="Phase-5"><a href="#Phase-5" class="headerlink" title="Phase 5"></a>Phase 5</h3><h4 id="Arm指令-3"><a href="#Arm指令-3" class="headerlink" title="Arm指令"></a>Arm指令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">000087d4 &lt;phase_5&gt;:</div><div class="line">87d4:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">87d8:	e28db004 	add	fp, sp, #4</div><div class="line">87dc:	e24dd018 	sub	sp, sp, #24</div><div class="line">87e0:	e50b0018 	str	r0, [fp, #-24]	; 0xffffffe8</div><div class="line">87e4:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8</div><div class="line">87e8:	eb000144 	bl	8d00 &lt;string_length&gt;</div><div class="line">87ec:	e1a03000 	mov	r3, r0</div><div class="line">87f0:	e3530006 	cmp	r3, #6  ○1</div><div class="line">87f4:	0a000000 	beq	87fc &lt;phase_5+0x28&gt;</div><div class="line">87f8:	eb000240 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">////////////////////////////////////////</div><div class="line">87fc:	e3a03000 	mov	r3, #0</div><div class="line">8800:	e50b3008 	str	r3, [fp, #-8]○2</div><div class="line">8804:	ea00000f 	b	8848 &lt;phase_5+0x74&gt;</div><div class="line">////////////////////////////////////////</div><div class="line">8808:	e51b1008 	ldr	r1, [fp, #-8]</div><div class="line">880c:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">8810:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8</div><div class="line">8814:	e0823003 	add	r3, r2, r3○4</div><div class="line">8818:	e5d33000 	ldrb	r3, [r3]</div><div class="line">881c:	e203300f 	and	r3, r3, #15</div><div class="line">///////////////////////////////////////</div><div class="line">8820:	e59f2060 	ldr	r2, [pc, #96]	; 8888 &lt;phase_5+0xb4&gt;</div><div class="line">8824:	e7d22003 	ldrb	r2, [r2, r3]   ○5</div><div class="line">///////////////////////////////////////</div><div class="line">8828:	e3e0300b 	mvn	r3, #11</div><div class="line">882c:	e24b0004 	sub	r0, fp, #4</div><div class="line">8830:	e0801001 	add	r1, r0, r1 ○6</div><div class="line">8834:	e0813003 	add	r3, r1, r3</div><div class="line">8838:	e5c32000 	strb	r2, [r3]</div><div class="line">////////////////////////////////////</div><div class="line">883c:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">8840:	e2833001 	add	r3, r3, #1   ○7</div><div class="line">8844:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">////////////////////////////////////</div><div class="line">8848:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">884c:	e3530005 	cmp	r3, #5  ○3</div><div class="line">8850:	daffffec 	ble	8808 &lt;phase_5+0x34&gt;</div><div class="line">///////////////////////////////////</div><div class="line">8854:	e3a03000 	mov	r3, #0</div><div class="line">8858:	e54b300a 	strb	r3, [fp, #-10]</div><div class="line">885c:	e24b3010 	sub	r3, fp, #16 </div><div class="line">8860:	e1a00003 	mov	r0, r3  ○8</div><div class="line">8864:	e59f1020 	ldr	r1, [pc, #32]	; 888c &lt;phase_5+0xb8&gt;</div><div class="line">8868:	eb000140 	bl	8d70 &lt;strings_not_equal&gt;</div><div class="line">886c:	e1a03000 	mov	r3, r0</div><div class="line">8870:	e3530000 	cmp	r3, #0</div><div class="line">8874:	0a000000 	beq	887c &lt;phase_5+0xa8&gt;</div><div class="line">8878:	eb000220 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">887c:	e24bd004 	sub	sp, fp, #4</div><div class="line">8880:	e8bd4800 	pop	&#123;fp, lr&#125;</div><div class="line">8884:	e12fff1e 	bx	lr</div><div class="line">8888:	0008216c 	.word	0x0008216c</div><div class="line">888c:	00064860 	.word	0x00064860</div></pre></td></tr></table></figure>
<h4 id="反汇编分析-4"><a href="#反汇编分析-4" class="headerlink" title="反汇编分析"></a>反汇编分析</h4><p>○1中代码首先判断读入的字符串的长度，如果长度等于6则跳到代码块○2中去，如果不等于6则explode_bomb。在代码块○2中，首先将计数变量i置为0，然后跳到代码块○3中去，在代码块○3中先判断i是否小于等于5，如果小于等于5的话就跳入○4中，其中○4○5○6○7为for循环的主体，我将其化成了这4部分。其中在○4的逻辑如下：取出字符串的第i个字符s[i],<br>然后将s[i]与0xF相与，其中一个char为一个字节，由两个16进制数组成，做相与运算后就只取出char的后4个b，将数值存入r3中。然后到代码块○5中，找到数据pc+96（8888）处的数据，根据IDA pro得出其引用的是0008216C处的数据，数据如图：</p>
<p><img src="http://i.imgur.com/fQNXmbv.png" alt=""></p>
<p>，然后根据r3中的数值作为索引取得相应的字符，将得到的字符存入r2中，然后到代码块○6中，其将r2的数据存入(fp-4-11)+i的地址处。代码○7是将i++。所以该段代码的伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">for(i = 0;i &lt;= 5;i++)</div><div class="line">&#123;</div><div class="line">	int a = (int)(s[i]&amp;0xF);</div><div class="line">	s1[i] = 0x0008216c+a;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其中s为输入的字符串，s1为找到的字符串。<br>for循环结束了之后，得到长度为6的s1字符串，到了代码块○8中，该逻辑是将s1与（pc-32）即888c处的字符串进行比较，根据IDA pro得到引用了数据段00064860处的数据为：</p>
<p>所以只有当s1为”giants”时，才能通过，即索引顺序为0xF,0x0,0x5,0xB,0xD,0x1，查ascii表得到后4个b分别为这些的十六进制的数的字符分别为opeka（可能有多重情况，只要后4个b分别对应那五个十六进制数的字符即可）。</p>
<h4 id="密码-4"><a href="#密码-4" class="headerlink" title="密码"></a>密码</h4><p>opeka</p>
<h3 id="Phase-6"><a href="#Phase-6" class="headerlink" title="Phase 6"></a>Phase 6</h3><p>指令及逻辑分析：<br>由于该炸弹的指令及逻辑较长，所以指令分开了几份分别进行分析。</p>
<p>00008890 <phase_6>:</phase_6></p>
<h4 id="读入六个数"><a href="#读入六个数" class="headerlink" title="读入六个数"></a>读入六个数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"> 8890:	e92d4800 	push	&#123;fp, lr&#125;</div><div class="line">8894:	e28db004 	add	fp, sp, #4</div><div class="line">8898:	e24dd048 	sub	sp, sp, #72	; 0x48</div><div class="line">889c:	e50b0048 	str	r0, [fp, #-72]	; 0xffffffb8</div><div class="line">88a0:	e59f3234 	ldr	r3, [pc, #564]	; 8adc &lt;phase_6+0x24c&gt;</div><div class="line">88a4:	e50b3010 	str	r3, [fp, #-16]</div><div class="line">88a8:	e24b3028 	sub	r3, fp, #40	; 0x28</div><div class="line">88ac:	e51b0048 	ldr	r0, [fp, #-72]	; 0xffffffb8</div><div class="line">88b0:	e1a01003 	mov	r1, r3</div><div class="line">88b4:	eb0000f0 	bl	8c7c &lt;read_six_numbers&gt;</div></pre></td></tr></table></figure>
<p>以上的指令的逻辑比较简单，是首先读入六个数字，并将其放入数组中，假设数组为a。</p>
<h4 id="对这六个数的值进行判定"><a href="#对这六个数的值进行判定" class="headerlink" title="对这六个数的值进行判定"></a>对这六个数的值进行判定</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">    88b8:	e3a03000 	mov	r3, #0</div><div class="line">88bc:	e50b300c 	str	r3, [fp, #-12]</div><div class="line">88c0:	e51b200c 	ldr	r2, [fp, #-12]  ○1</div><div class="line">////////////////////////////////////</div><div class="line">88c4:	e3e03023 	mvn	r3, #35	; 0x23</div><div class="line">88c8:	e1a02102 	lsl	r2, r2, #2</div><div class="line">88cc:	e24b0004 	sub	r0, fp, #4</div><div class="line">88d0:	e0802002 	add	r2, r0, r2   ○2</div><div class="line">88d4:	e0823003 	add	r3, r2, r3</div><div class="line">88d8:	e5933000 	ldr	r3, [r3]</div><div class="line">///////////////////////////////////</div><div class="line">88dc:	e2433001 	sub	r3, r3, #1</div><div class="line">88e0:	e3530005 	cmp	r3, #5   ○3</div><div class="line">88e4:	9a000000 	bls	88ec &lt;phase_6+0x5c&gt;</div><div class="line">88e8:	eb000204 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">//////////////////////////////////</div><div class="line">88ec:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">88f0:	e2833001 	add	r3, r3, #1   ○4</div><div class="line">88f4:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">88f8:	ea000013 	b	894c &lt;phase_6+0xbc&gt;</div><div class="line">//////////////////////////////////</div><div class="line">88fc:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">8900:	e3e03023 	mvn	r3, #35	; 0x23</div><div class="line">8904:	e1a02102 	lsl	r2, r2, #2</div><div class="line">8908:	e24b1004 	sub	r1, fp, #4  ○6</div><div class="line">890c:	e0812002 	add	r2, r1, r2 </div><div class="line">8910:	e0823003 	add	r3, r2, r3</div><div class="line">8914:	e5932000 	ldr	r2, [r3]</div><div class="line">//////////////////////////////////</div><div class="line">8918:	e51b1008 	ldr	r1, [fp, #-8]</div><div class="line">891c:	e3e03023 	mvn	r3, #35	; 0x23</div><div class="line">8920:	e1a01101 	lsl	r1, r1, #2</div><div class="line">8924:	e24b0004 	sub	r0, fp, #4   ○7</div><div class="line">8928:	e0801001 	add	r1, r0, r1</div><div class="line">892c:	e0813003 	add	r3, r1, r3</div><div class="line">8930:	e5933000 	ldr	r3, [r3]</div><div class="line">/////////////////////////////////</div><div class="line">8934:	e1520003 	cmp	r2, r3</div><div class="line">8938:	1a000000 	bne	8940 &lt;phase_6+0xb0&gt; </div><div class="line">893c:	eb0001ef 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">8940:	e51b3008 	ldr	r3, [fp, #-8]○8</div><div class="line">8944:	e2833001 	add	r3, r3, #1</div><div class="line">8948:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">///////////////////////////////////</div><div class="line">894c:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">8950:	e3530005 	cmp	r3, #5   ○5</div><div class="line">8954:	daffffe8 	ble	88fc &lt;phase_6+0x6c&gt;</div><div class="line">//////////////////////////////////</div><div class="line">8958:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">895c:	e2833001 	add	r3, r3, #1</div><div class="line">8960:	e50b300c 	str	r3, [fp, #-12]   ○9</div><div class="line">8964:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8968:	e3530005 	cmp	r3, #5</div><div class="line">896c:	daffffd3 	ble	88c0 &lt;phase_6+0x30&gt;</div><div class="line">8970:	e3a03000 	mov	r3, #0</div><div class="line">8974:	e50b300c 	str	r3, [fp, #-12]</div></pre></td></tr></table></figure>
<p>以上的指令为两个for循环的嵌套。<br>其中○1为(fp-12)处存的变量假设为i，把变量i的值存入r2，然后代码段○2处为取出a[i]的值并将其存入r3中，紧接着代码段○3处判断r3的值是否大于6，如果大于6就explode_bomb。然后进入代码块○4中，在此就进入了第二个for循环，首先初始化(fp-8)处的变量，设为j，j = i+1;然后进入代码段○5处对j的值进行判断，如果大于5就进入代码段○9，其中代码○9是将i增1并进行判断，如果i大于5就跳出for循环，如果小于5则跳至○1再进行一次for循环，对于代码○5处的判断如果j小于等于5的话，则跳入代码○6处，其中逻辑为取出a[i]的值将其放入r2中，然后进入○7中，取出a[j]的值将其放入r3中，然后进入○8，将r2和r3进行比较，如果相等的话就explode_bomb,不行等就进入○5，又进行了一次循环。其伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">for(int i = 0;i &lt;= 5;i++)</div><div class="line">	&#123;if(a[i]&gt;6)</div><div class="line">		explode_bomb();</div><div class="line">	for(int j = i+1;j&lt;=5;j++)</div><div class="line">		&#123;if(a[j] == a[i])</div><div class="line">			explode_bomb();</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="根据输入的6个数把链表的6个node进行索引排序"><a href="#根据输入的6个数把链表的6个node进行索引排序" class="headerlink" title="根据输入的6个数把链表的6个node进行索引排序"></a>根据输入的6个数把链表的6个node进行索引排序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">    8978:	e59f315c 	ldr	r3, [pc, #348]	; 8adc &lt;phase_6+0x24c&gt;   </div><div class="line">897c:	e50b3010 	str	r3, [fp, #-16]</div><div class="line">8980:	e3a03001 	mov	r3, #1 ○1</div><div class="line">8984:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">8988:	ea000005 	b	89a4 &lt;phase_6+0x114&gt;</div><div class="line">/////////////////////////////////////////////</div><div class="line">898c:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8990:	e5933008 	ldr	r3, [r3, #8]</div><div class="line">8994:	e50b3010 	str	r3, [fp, #-16]  ○3</div><div class="line">8998:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">899c:	e2833001 	add	r3, r3, #1</div><div class="line">89a0:	e50b3008 	str	r3, [fp, #-8]</div><div class="line">////////////////////////////////////////</div><div class="line">89a4:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">89a8:	e3e03023 	mvn	r3, #35	; 0x23</div><div class="line">89ac:	e1a02102 	lsl	r2, r2, #2</div><div class="line">89b0:	e24b1004 	sub	r1, fp, #4</div><div class="line">89b4:	e0812002 	add	r2, r1, r2  ○2</div><div class="line">89b8:	e0823003 	add	r3, r2, r3</div><div class="line">89bc:	e5932000 	ldr	r2, [r3]</div><div class="line">89c0:	e51b3008 	ldr	r3, [fp, #-8]</div><div class="line">89c4:	e1520003 	cmp	r2, r3</div><div class="line">89c8:	caffffef 	bgt	898c &lt;phase_6+0xfc&gt;</div><div class="line">////////////////////////////////////////////</div><div class="line">89cc:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">89d0:	e3e0303b 	mvn	r3, #59	; 0x3b</div><div class="line">89d4:	e1a02102 	lsl	r2, r2, #2</div><div class="line">89d8:	e24b0004 	sub	r0, fp, #4  ○4</div><div class="line">89dc:	e0802002 	add	r2, r0, r2</div><div class="line">89e0:	e0823003 	add	r3, r2, r3</div><div class="line">89e4:	e51b2010 	ldr	r2, [fp, #-16]</div><div class="line">89e8:	e5832000 	str	r2, [r3]</div><div class="line">///////////////////////////////////////////</div><div class="line">89ec:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">89f0:	e2833001 	add	r3, r3, #1</div><div class="line">89f4:	e50b300c 	str	r3, [fp, #-12]   ○5</div><div class="line">89f8:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">89fc:	e3530005 	cmp	r3, #5</div><div class="line">8a00:	daffffdc 	ble	8978 &lt;phase_6+0xe8&gt;</div><div class="line">///////////////////////////////////////////</div><div class="line">8a04:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0</div><div class="line">8a08:	e50b3010 	str	r3, [fp, #-16]○9</div><div class="line">8a0c:	e3a03001 	mov	r3, #1</div><div class="line">8a10:	e50b300c 	str	r3, [fp, #-12]</div><div class="line">/////////////////////////////////////////</div><div class="line">8a14:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">8a18:	e3e0303b 	mvn	r3, #59	; 0x3b</div><div class="line">8a1c:	e1a02102 	lsl	r2, r2, #2</div><div class="line">8a20:	e24b1004 	sub	r1, fp, #4  </div><div class="line">8a24:	e0812002 	add	r2, r1, r2○6</div><div class="line">8a28:	e0823003 	add	r3, r2, r3</div><div class="line">8a2c:	e5932000 	ldr	r2, [r3]</div><div class="line">8a30:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8a34:	e5832008 	str	r2, [r3, #8]</div><div class="line">///////////////////////////////////////</div><div class="line">8a38:	e51b200c 	ldr	r2, [fp, #-12]</div><div class="line">8a3c:	e3e0303b 	mvn	r3, #59	; 0x3b</div><div class="line">8a40:	e1a02102 	lsl	r2, r2, #2○7</div><div class="line">8a44:	e24b0004 	sub	r0, fp, #4</div><div class="line">8a48:	e0802002 	add	r2, r0, r2</div><div class="line">8a4c:	e0823003 	add	r3, r2, r3</div><div class="line">8a50:	e5933000 	ldr	r3, [r3]</div><div class="line">8a54:	e50b3010 	str	r3, [fp, #-16]</div><div class="line">////////////////////////////////////</div><div class="line">8a58:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8a5c:	e2833001 	add	r3, r3, #1</div><div class="line">8a60:	e50b300c 	str	r3, [fp, #-12] ○8</div><div class="line">8a64:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8a68:	e3530005 	cmp	r3, #5</div><div class="line">8a6c:	daffffe8 	ble	8a14 &lt;phase_6+0x184&gt;</div></pre></td></tr></table></figure>
<p>该段代码也有一个for循环的嵌套。<br>首先初始化，将(PC+348)的索引的数存入r3中，由ida pro得出具体数据为</p>
<p><img src="http://i.imgur.com/U4XskLn.png" alt=""></p>
<p>所以将node1的索引传入r3，然后跳入到代码块○2，其逻辑是先取出a[i]的数据至r2，然后取出j至r3，比较这两个数据的大小，如果r2 &gt;r3,就跳到代码段○3，该逻辑是将r3+0x8的数据存入fp-16中，有以上的数据可知该数据为0x20A0，用IDA pro查找到为：</p>
<p><img src="http://i.imgur.com/UBtpSiS.png" alt=""></p>
<p>以此类推，根据每个节点的第8个字节处的数据作为下一个节点的地址，直到找到链表的a[i]个元素，就会跳出该内层的for循环，然后进入代码块○4，该逻辑是将该node的地址存入-0x3c+[R11] + 4 * i中，然后进入代码块○5，其逻辑是使变量i增1，然后判断是否大于5，如果小于5再跳入○1中继续循环。<br>其for循环的伪代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">for(int i = 0;i &lt;=5;i++)</div><div class="line">&#123;</div><div class="line">	node = 0x000820AC;</div><div class="line">	for(int j = 1;j&lt;a[i];j++)</div><div class="line">		node = *(node+0x8);</div><div class="line">	-0x3c+[R11] + 4 * i = node;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>所以经过上一个for循环的嵌套，从-0x3c+[R11]开始就有了这些节点的地址的索引，然后进入代码段○9，其逻辑是先将fp-12处的变量i初始化为1，目的是进入for循环。进入代码段○6,其目的是将*((-0x3c+[R11]+i-1)+0x8) = (-0x3c+[R11]+i)；然后进入代码段○7，其目的是将当前节点设为-0x3c+[R11]+i处的地址所指向的节点，进入代码块○8，使i增1并判断和5的大小关系。      </p>
<h4 id="判断链表的节点的数值是否是按从大到小的顺序排列的"><a href="#判断链表的节点的数值是否是按从大到小的顺序排列的" class="headerlink" title="判断链表的节点的数值是否是按从大到小的顺序排列的"></a>判断链表的节点的数值是否是按从大到小的顺序排列的</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">8a70:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8a74:	e3a02000 	mov	r2, #0</div><div class="line">8a78:	e5832008 	str	r2, [r3, #8]</div><div class="line">8a7c:	e3a03000 	mov	r3, #0  ○1</div><div class="line">8a80:	e50b300c 	str	r3, [fp, #-12]</div><div class="line">8a84:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0</div><div class="line">8a88:	e50b3010 	str	r3, [fp, #-16]</div><div class="line">//////////////////////////////////////</div><div class="line">8a8c:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8a90:	e5932000 	ldr	r2, [r3]</div><div class="line">8a94:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8a98:	e5933008 	ldr	r3, [r3, #8] ○2</div><div class="line">8a9c:	e5933000 	ldr	r3, [r3]</div><div class="line">8aa0:	e1520003 	cmp	r2, r3</div><div class="line">8aa4:	aa000000 	bge	8aac &lt;phase_6+0x21c&gt;</div><div class="line">8aa8:	eb000194 	bl	9100 &lt;explode_bomb&gt;</div><div class="line">//////////////////////////////////////////</div><div class="line">8aac:	e51b3010 	ldr	r3, [fp, #-16]</div><div class="line">8ab0:	e5933008 	ldr	r3, [r3, #8]  ○3</div><div class="line">8ab4:	e50b3010 	str	r3, [fp, #-16]</div><div class="line">///////////////////////////////////////</div><div class="line">8ab8:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8abc:	e2833001 	add	r3, r3, #1   </div><div class="line">8ac0:	e50b300c 	str	r3, [fp, #-12] ○4</div><div class="line">8ac4:	e51b300c 	ldr	r3, [fp, #-12]</div><div class="line">8ac8:	e3530004 	cmp	r3, #4</div><div class="line">8acc:	daffffee 	ble	8a8c &lt;phase_6+0x1fc&gt;</div></pre></td></tr></table></figure>
<p>首先进入○1进行初始化，将（fp-16）处的地址换为链表的第一个node，并对（fp-12）的变量i初始化为0。然后进入代码块○2，首先获得当前node的地址，并将该node的数据存入r2中，地址存入r3中，然后通过[r3+8]获得下一个node的地址，并将下一个node的地址存入r3中，然后比较r2和r3的值，如果r2小于r3，就explode_bomb,<br>如果不小于就进入代码块○3，该逻辑是将当前节点（fp-16）的地址改为[r3+8]处的数值，即为下一个节点的地址，然后进入代码○4，对变量i进行增1操作，并判断和4的大小。其伪代码如下：<br>其中node的数据结构如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">struct node</div><div class="line"> &#123;</div><div class="line"> int x, y;</div><div class="line"> node *next; &#125;;</div><div class="line">//进行判断：</div><div class="line">node a = firstNode;</div><div class="line">   for(int i = 0; i &lt; 5; i++)</div><div class="line">&#123;</div><div class="line">   node b = a-&gt;next;</div><div class="line">   if (a-&gt;x &gt;= b-&gt;x)</div><div class="line">  a = b;</div><div class="line">   else</div><div class="line">  explode_bomb();</div><div class="line">  &#125;</div></pre></td></tr></table></figure>
<p>所以根据逻辑，先找出每个节点的数据，然后再根据输入的数进行排序，保证其是从大到小的顺序排列的。根据IDA pro找到每个node所在的地址为：<br>地址    数据    下个节点地址<br>0x820AC    0xFD    0x820A0<br>0x820A0    0x2D5    0x82094<br>0x82094    0x12D    0x82088<br>0x82088    0x3E5    0x8207C<br>0x8207C    0xD4    0x82070<br>0x82070    0x1B0    </p>
<p>所以由大到小排列的话就为4 2 6 3 1 5</p>
<h4 id="密码-5"><a href="#密码-5" class="headerlink" title="密码"></a>密码</h4><p>   4 2 6 3 1 5</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;x86上的二进制炸弹对于反汇编的练习来说还是比较经典的，由于网上有很多该程序的讲解，所以在此我打算写一下arm平台上的二进制拆炸弹这个游戏。&lt;/p&gt;
&lt;h2 id=&quot;环境的搭建&quot;&gt;&lt;a href=&quot;#环境的搭建&quot; class=&quot;headerlink&quot; title=&quot;环境的搭
    
    </summary>
    
      <category term="反汇编" scheme="http://bin2415.github.io/categories/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="反汇编" scheme="http://bin2415.github.io/tags/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
      <category term="体系结构" scheme="http://bin2415.github.io/tags/%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Raytracing</title>
    <link href="http://bin2415.github.io/2017/04/13/Raytracing/"/>
    <id>http://bin2415.github.io/2017/04/13/Raytracing/</id>
    <published>2017-04-13T07:40:03.000Z</published>
    <updated>2017-05-16T07:42:58.784Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>本程序是根据<a href="http://run.usc.edu/cs480-s13/assignments/assign3/assign3.html" target="_blank" rel="external">Raytracing</a>的要求所写。</p>
<p>该题目要求根据其所给的框架程序来实现raytracing的功能。</p>
<h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><ul>
<li>环境是virual studio 2015和opengl</li>
<li>具体代码及分析如下：</li>
</ul>
<pre><code><figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line">CSCI 480</div><div class="line">Assignment 3 Raytracer</div><div class="line"></div><div class="line">Name: &lt;binpang&gt;</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> GLUT_DISABLE_ATEXIT_HACK</span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pic.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glu.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;GL/glut.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_TRIANGLES 2000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_SPHERES 10</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_LIGHTS 10</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">char</span> *filename=<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MODE_DISPLAY 1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MODE_JPEG 2</span></div><div class="line"><span class="keyword">int</span> mode=MODE_DISPLAY;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WIDTH 640</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> HEIGHT 480</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> fov 60.0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.1415926</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">int</span> MaxStep = <span class="number">10</span>;</div><div class="line"><span class="keyword">int</span> Steps = <span class="number">0</span>;</div><div class="line"><span class="comment">//求出投射的屏幕的x和y的最大范围的坐标</span></div><div class="line"></div><div class="line"><span class="keyword">double</span> yMax = <span class="built_in">tan</span>((<span class="keyword">double</span>)PI*fov / (<span class="number">2</span> * <span class="number">180</span>));</div><div class="line"><span class="keyword">double</span> xMax = yMax*((<span class="keyword">double</span>)WIDTH) / ((<span class="keyword">double</span>)HEIGHT);</div><div class="line"></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buffer[HEIGHT][WIDTH][<span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">double</span> position[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> color_diffuse[<span class="number">3</span>];<span class="comment">//漫射</span></div><div class="line">  <span class="keyword">double</span> color_specular[<span class="number">3</span>];	  <span class="comment">//反射</span></div><div class="line">  <span class="keyword">double</span> normal[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> shininess;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Triangle</span></span></div><div class="line">&#123;</div><div class="line">  <span class="class"><span class="keyword">struct</span> <span class="title">Vertex</span> <span class="title">v</span>[3];</span></div><div class="line">&#125; Triangle;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Sphere</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">double</span> position[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> color_diffuse[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> color_specular[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> shininess;</div><div class="line">  <span class="keyword">double</span> radius;</div><div class="line">&#125; Sphere;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">Light</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">double</span> position[<span class="number">3</span>];</div><div class="line">  <span class="keyword">double</span> color[<span class="number">3</span>];</div><div class="line">&#125; Light;</div><div class="line"></div><div class="line"><span class="comment">//表示点的结构</span></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> x;</div><div class="line">	<span class="keyword">double</span> y;</div><div class="line">	<span class="keyword">double</span> z;</div><div class="line">&#125;;</div><div class="line"><span class="comment">//点在里面还是在外面</span></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">isIn</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">bool</span> in;		<span class="comment">//当在三角形外面时为0，当在里面时为1</span></div><div class="line">	<span class="keyword">double</span> bary[<span class="number">3</span>];</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//交点的结构</span></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">intexPoint</span></span></div><div class="line">&#123;</div><div class="line">	point p;</div><div class="line">	<span class="keyword">double</span> t;</div><div class="line">	<span class="keyword">int</span> tID;	<span class="comment">//物体在数组中的标号</span></div><div class="line">	<span class="keyword">int</span> tObj;  <span class="comment">//如果是1表示点在圆上，如果为2表示在三角形上</span></div><div class="line">	isIn iO;	</div><div class="line">&#125;;</div><div class="line">Triangle triangles[MAX_TRIANGLES];</div><div class="line">Sphere spheres[MAX_SPHERES];</div><div class="line">Light lights[MAX_LIGHTS];</div><div class="line"><span class="keyword">double</span> ambient_light[<span class="number">3</span>];</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span> <span class="title">cam</span>;</span></div><div class="line"></div><div class="line"><span class="keyword">int</span> num_triangles=<span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> num_spheres=<span class="number">0</span>;</div><div class="line"><span class="keyword">int</span> num_lights=<span class="number">0</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel_display</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g,<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel_jpeg</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g,<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g,<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span>;</div><div class="line"></div><div class="line"><span class="function">point <span class="title">reflect</span><span class="params">(intexPoint p, point dir)</span></span>;</div><div class="line"></div><div class="line"><span class="function">point <span class="title">Render</span><span class="params">(point p, point dir)</span></span>;</div><div class="line"><span class="comment">//两个点进行相减</span></div><div class="line"><span class="function">point <span class="title">minusPoint</span><span class="params">(point A, point B)</span></span></div><div class="line">&#123;</div><div class="line">	point C;</div><div class="line">	C.x = A.x - B.x;</div><div class="line">	C.y = A.y - B.y;</div><div class="line">	C.z = A.z - B.z;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> C;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//向量除以一个数</span></div><div class="line"><span class="function">point <span class="title">DivConst</span><span class="params">(point A, <span class="keyword">double</span> a)</span></span></div><div class="line">&#123;</div><div class="line">	point B;</div><div class="line"></div><div class="line">	B.x = <span class="number">0.0</span>;</div><div class="line">	B.y = <span class="number">0.0</span>;</div><div class="line">	B.z = <span class="number">0.0</span>;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (<span class="built_in">abs</span>(a) &gt; <span class="number">1e-10</span>)</div><div class="line">	&#123;</div><div class="line">		B.x = A.x / a;</div><div class="line">		B.y = A.y / a;</div><div class="line">		B.z = A.z / a;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> B;</div><div class="line">&#125;</div><div class="line"><span class="comment">//计算向量的大小</span></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">caculateSize</span><span class="params">(point A)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> size;</div><div class="line">	size = <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(A.x, <span class="number">2</span>) + <span class="built_in">pow</span>(A.y, <span class="number">2</span>) + <span class="built_in">pow</span>(A.z, <span class="number">2</span>));</div><div class="line">	<span class="keyword">return</span> size;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//单位化向量</span></div><div class="line"><span class="function">point <span class="title">unitize</span><span class="params">(point A)</span></span></div><div class="line">&#123;</div><div class="line">	point uni;</div><div class="line">	<span class="keyword">double</span> size;</div><div class="line">	size = caculateSize(A);</div><div class="line">	uni = DivConst(A, size);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> uni;</div><div class="line">&#125;</div><div class="line"><span class="comment">//点乘</span></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">dot</span><span class="params">(point A, point B)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> C;</div><div class="line"></div><div class="line">	C = (A.x*B.x + A.y*B.y + A.z*B.z);</div><div class="line">	<span class="keyword">return</span> C;</div><div class="line">&#125;</div><div class="line"><span class="comment">//叉乘</span></div><div class="line"><span class="function">point <span class="title">cross</span><span class="params">(point A, point B)</span></span></div><div class="line">&#123;</div><div class="line">	point C;</div><div class="line">	C.x = (A.y*B.z - B.y*A.z);</div><div class="line">	C.y = (B.x*A.z - A.x*B.z);</div><div class="line">	C.z = (A.x*B.y - A.y*B.x);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> C;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//求出距离src，方向为dir，长度为t的点</span></div><div class="line"><span class="function">point <span class="title">caluPoint</span><span class="params">(point src, point dir, <span class="keyword">double</span> t)</span></span></div><div class="line">&#123;</div><div class="line">	point p;</div><div class="line"></div><div class="line">	p.x = src.x + t*(dir.x);</div><div class="line">	p.y = src.y + t*(dir.y);</div><div class="line">	p.z = src.z + t*(dir.z);</div><div class="line"></div><div class="line">	<span class="keyword">return</span> p;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//与球的交点</span></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">intersectSphere</span><span class="params">(Sphere sphere, point src, point dir)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">double</span> b, c, t, t1, t2;</div><div class="line">	t1 = <span class="number">0</span>;</div><div class="line">	t2 = <span class="number">0</span>;</div><div class="line"></div><div class="line">	c = <span class="built_in">pow</span>((src.x - sphere.position[<span class="number">0</span>]), <span class="number">2</span>) + <span class="built_in">pow</span>((src.y - sphere.position[<span class="number">1</span>]), <span class="number">2</span>)</div><div class="line">		+ <span class="built_in">pow</span>((src.z - sphere.position[<span class="number">2</span>]), <span class="number">2</span>) - <span class="built_in">pow</span>(sphere.radius, <span class="number">2</span>);</div><div class="line">	b = <span class="number">2</span> * (dir.x*(src.x - sphere.position[<span class="number">0</span>])</div><div class="line">		+ dir.y*(src.y - sphere.position[<span class="number">1</span>])</div><div class="line">		+ dir.z*(src.z - sphere.position[<span class="number">2</span>])</div><div class="line">		);</div><div class="line"></div><div class="line">	<span class="comment">//检查判别式是否大于0</span></div><div class="line">	<span class="keyword">if</span> ((<span class="built_in">pow</span>(b, <span class="number">2</span>) - <span class="number">4</span> * c) &gt; <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		t1 = (((<span class="number">-1</span>)*b) + <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b, <span class="number">2</span>) - <span class="number">4</span> * c)) / <span class="number">2</span>;</div><div class="line">		t2 = (((<span class="number">-1</span>)*b) - <span class="built_in">sqrt</span>(<span class="built_in">pow</span>(b, <span class="number">2</span>) - <span class="number">4</span> * c)) / <span class="number">2</span>;</div><div class="line"></div><div class="line">		<span class="keyword">if</span> (t1 &lt;= t2)</div><div class="line">			t = t1;</div><div class="line">		<span class="keyword">else</span></div><div class="line">			t = t2;</div><div class="line">		<span class="keyword">if</span> (t &lt; <span class="number">0</span>)</div><div class="line">			t = <span class="number">-1</span>;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (t&lt;<span class="number">1e-10</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (t1&lt;<span class="number">1e-15</span> &amp;&amp; t2&gt;<span class="number">1e-15</span>)</div><div class="line">				t = t2;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (t2&lt;<span class="number">1e-15</span> &amp;&amp; t1&gt;<span class="number">1e-15</span>)</div><div class="line">				t = t1;</div><div class="line">			<span class="keyword">else</span> t = <span class="number">-1</span>; </div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> t = <span class="number">-1</span>; </div><div class="line"></div><div class="line">	<span class="keyword">return</span> t;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//获得两个顶点之间的边</span></div><div class="line"><span class="function">point <span class="title">getSide</span><span class="params">(Vertex v1, Vertex v2)</span></span></div><div class="line">&#123;</div><div class="line">	point c;</div><div class="line">	c.x = v1.position[<span class="number">0</span>] - v2.position[<span class="number">0</span>];</div><div class="line">	c.y = v1.position[<span class="number">1</span>] - v2.position[<span class="number">1</span>];</div><div class="line">	c.z = v1.position[<span class="number">2</span>] - v2.position[<span class="number">2</span>];</div><div class="line"></div><div class="line">	<span class="keyword">return</span> c;</div><div class="line">&#125;</div><div class="line"><span class="comment">//判断两个点是否相等</span></div><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkEqual</span><span class="params">(point A, point B)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">bool</span> equ;</div><div class="line">	<span class="keyword">if</span> ((<span class="built_in">abs</span>(A.x - B.x)&lt;<span class="number">1e-10</span>) &amp;&amp; (<span class="built_in">abs</span>(A.y - B.y)&lt;<span class="number">1e-10</span>) &amp;&amp; (<span class="built_in">abs</span>(A.z - B.z)&lt;<span class="number">1e-10</span>))</div><div class="line">		equ = <span class="number">1</span>;</div><div class="line">	<span class="keyword">else</span></div><div class="line">		equ = <span class="number">0</span>;</div><div class="line">	<span class="keyword">return</span> equ;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">intersectTriangle</span><span class="params">(Triangle triangle, point src, point dir,isIn* iO)</span></span></div><div class="line">&#123;</div><div class="line">	point AB, AC, DirxAC;</div><div class="line">	<span class="keyword">float</span> u, v, t;</div><div class="line">	<span class="comment">//isIn iO;</span></div><div class="line">	AB = getSide(triangle.v[<span class="number">1</span>], triangle.v[<span class="number">0</span>]);</div><div class="line">	AC = getSide(triangle.v[<span class="number">2</span>], triangle.v[<span class="number">0</span>]);</div><div class="line">	DirxAC = cross(dir, AC);</div><div class="line">	<span class="keyword">float</span> det = dot(AB, DirxAC);</div><div class="line">	point T;</div><div class="line">	point p1;</div><div class="line">	p1.x = triangle.v[<span class="number">0</span>].position[<span class="number">0</span>];</div><div class="line">	p1.y = triangle.v[<span class="number">0</span>].position[<span class="number">1</span>];</div><div class="line">	p1.z = triangle.v[<span class="number">0</span>].position[<span class="number">2</span>];</div><div class="line">	<span class="keyword">if</span> (det &gt;<span class="number">0</span>)</div><div class="line">   &#123;</div><div class="line">	   T = minusPoint(src, p1);</div><div class="line">&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		T = minusPoint(p1, src);</div><div class="line">	det = -det;</div><div class="line"> &#125;</div><div class="line">	<span class="keyword">if</span> (det &lt; <span class="number">1e-10</span>)</div><div class="line">	&#123;</div><div class="line">		iO-&gt;in = <span class="number">-1</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	u = dot(T, DirxAC);</div><div class="line">	<span class="keyword">if</span> (u &lt; <span class="number">0.0f</span> || u &gt; det)</div><div class="line">	&#123;</div><div class="line">		iO-&gt;in = <span class="number">-1</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	point Q = cross(T, AB);</div><div class="line">	v = dot(dir, Q);</div><div class="line">	<span class="keyword">if</span> (v &lt; <span class="number">0.0f</span> || u + v &gt; det)</div><div class="line">	&#123;</div><div class="line">		iO-&gt;in = <span class="number">-1</span>;</div><div class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	t = dot(AC, Q);</div><div class="line">	<span class="comment">//t = -t;</span></div><div class="line">	<span class="keyword">float</span> fInvDet = <span class="number">1.0f</span> / det;</div><div class="line">	t *= fInvDet;</div><div class="line">	u *= fInvDet;</div><div class="line">	v *= fInvDet;</div><div class="line"></div><div class="line">	iO-&gt;in = <span class="number">1</span>;</div><div class="line">	iO-&gt;bary[<span class="number">0</span>] = u;</div><div class="line">	iO-&gt;bary[<span class="number">1</span>] = v;</div><div class="line">	iO-&gt;bary[<span class="number">2</span>] = <span class="number">1</span> - u - v;</div><div class="line">	<span class="keyword">return</span> t;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//找到p点在圆上的的法向量，tID为spheres数组中的标号</span></div><div class="line"><span class="function">point <span class="title">findSphereNormal</span><span class="params">(point p, <span class="keyword">int</span> tID)</span></span></div><div class="line">&#123;</div><div class="line">	point n;</div><div class="line"></div><div class="line">	<span class="comment">// based on the equation</span></div><div class="line">	n.x = (p.x - spheres[tID].position[<span class="number">0</span>]) / spheres[tID].radius;</div><div class="line">	n.y = (p.y - spheres[tID].position[<span class="number">1</span>]) / spheres[tID].radius;</div><div class="line">	n.z = (p.z - spheres[tID].position[<span class="number">2</span>]) / spheres[tID].radius;</div><div class="line">	<span class="keyword">return</span> n;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//三角形的线性插值,如果ID为0则表示法线插值,如果ID为1则表示漫反射，如果为2则表示镜面反射</span></div><div class="line"><span class="function">point <span class="title">chazhi</span><span class="params">(Triangle triangle, isIn iO, <span class="keyword">int</span> ID)</span></span></div><div class="line">&#123;</div><div class="line">	point P;</div><div class="line">	<span class="keyword">if</span> (ID == <span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">		P.x = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].normal[<span class="number">0</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].normal[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].normal[<span class="number">2</span>];</div><div class="line"></div><div class="line">		P.y = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].normal[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].normal[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].normal[<span class="number">1</span>];</div><div class="line"></div><div class="line">		P.z = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].normal[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].normal[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].normal[<span class="number">2</span>];</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (ID == <span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		P.x = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_diffuse[<span class="number">0</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_diffuse[<span class="number">0</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_diffuse[<span class="number">0</span>];</div><div class="line"></div><div class="line">		P.y = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_diffuse[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_diffuse[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_diffuse[<span class="number">1</span>];</div><div class="line"></div><div class="line">		P.z = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_diffuse[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_diffuse[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_diffuse[<span class="number">2</span>];</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (ID == <span class="number">2</span>)</div><div class="line">	&#123;</div><div class="line">		P.x = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_specular[<span class="number">0</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_specular[<span class="number">0</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_specular[<span class="number">0</span>];</div><div class="line"></div><div class="line">		P.y = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_specular[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_specular[<span class="number">1</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_specular[<span class="number">1</span>];</div><div class="line"></div><div class="line">		P.z = iO.bary[<span class="number">0</span>] * triangle.v[<span class="number">0</span>].color_specular[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">1</span>] * triangle.v[<span class="number">1</span>].color_specular[<span class="number">2</span>]</div><div class="line">			+ iO.bary[<span class="number">2</span>] * triangle.v[<span class="number">2</span>].color_specular[<span class="number">2</span>];</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> P;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//公式模型I_spec = k_z * I_l(V • ((2N • L)N - L))^n_s</span></div><div class="line"><span class="comment">//其中R = (2N • L)N - L</span></div><div class="line"><span class="function">point <span class="title">phong</span><span class="params">(point p, <span class="keyword">int</span> id, <span class="keyword">int</span> Obj, isIn iO, Light light, point camera)</span></span></div><div class="line">&#123;</div><div class="line">	point n, l, v, r, kd, ks;</div><div class="line">	point po;</div><div class="line">	<span class="keyword">double</span> lDotN, rDotV, n_s;</div><div class="line"></div><div class="line">	<span class="comment">//用point表示light的位置</span></div><div class="line">	l.x = light.position[<span class="number">0</span>];</div><div class="line">	l.y = light.position[<span class="number">1</span>];</div><div class="line">	l.z = light.position[<span class="number">2</span>];</div><div class="line"></div><div class="line">	<span class="comment">//l = l - p;</span></div><div class="line">	<span class="comment">//入射光线</span></div><div class="line">	l = unitize(minusPoint(l, p));</div><div class="line"></div><div class="line">	<span class="comment">//v = camera - p;</span></div><div class="line">	<span class="comment">//观察者到p点的射线</span></div><div class="line">	v = unitize(minusPoint(camera, p));</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (Obj == <span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		n = findSphereNormal(p, id);</div><div class="line"></div><div class="line">		kd.x = spheres[id].color_diffuse[<span class="number">0</span>];</div><div class="line">		kd.y = spheres[id].color_diffuse[<span class="number">1</span>];</div><div class="line">		kd.z = spheres[id].color_diffuse[<span class="number">2</span>];</div><div class="line"></div><div class="line">		ks.x = spheres[id].color_specular[<span class="number">0</span>];</div><div class="line">		ks.y = spheres[id].color_specular[<span class="number">1</span>];</div><div class="line">		ks.z = spheres[id].color_specular[<span class="number">2</span>];</div><div class="line"></div><div class="line">		n_s = spheres[id].shininess;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="keyword">if</span> (Obj == <span class="number">2</span>)</div><div class="line">		&#123;</div><div class="line">			n = unitize(chazhi(triangles[id], iO, <span class="number">0</span>));</div><div class="line">			kd = chazhi(triangles[id], iO, <span class="number">1</span>);</div><div class="line">			ks = chazhi(triangles[id], iO, <span class="number">2</span>);</div><div class="line"></div><div class="line">			n_s = iO.bary[<span class="number">0</span>] * triangles[id].v[<span class="number">0</span>].shininess</div><div class="line">				+ iO.bary[<span class="number">1</span>] * triangles[id].v[<span class="number">1</span>].shininess</div><div class="line">				+ iO.bary[<span class="number">2</span>] * triangles[id].v[<span class="number">2</span>].shininess;</div><div class="line">		&#125;</div><div class="line"></div><div class="line"></div><div class="line">	lDotN = dot(l, n);</div><div class="line">	<span class="keyword">if</span> (lDotN&lt;<span class="number">0</span>)</div><div class="line">		lDotN = <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (lDotN&gt;<span class="number">1.f</span>)</div><div class="line">		lDotN = <span class="number">1.f</span>;</div><div class="line"></div><div class="line">	<span class="comment">//R = (2N • L)N - L</span></div><div class="line">	r.x = <span class="number">2</span> * lDotN*n.x - l.x;</div><div class="line">	r.y = <span class="number">2</span> * lDotN*n.y - l.y;</div><div class="line">	r.z = <span class="number">2</span> * lDotN*n.z - l.z;</div><div class="line"></div><div class="line">	</div><div class="line">	rDotV = dot(r, v);</div><div class="line">	<span class="keyword">if</span> (rDotV&lt;<span class="number">0</span>)</div><div class="line">		rDotV = <span class="number">0</span>;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (rDotV&gt;<span class="number">1.f</span>)</div><div class="line">		rDotV = <span class="number">1.f</span>;</div><div class="line"></div><div class="line">	<span class="comment">//计算该点的颜色r,g,b</span></div><div class="line">	po.x = light.color[<span class="number">0</span>] * ((kd.x)*lDotN + ((ks.x)*<span class="built_in">pow</span>((rDotV), (n_s)))); <span class="comment">// r</span></div><div class="line">	po.y = light.color[<span class="number">1</span>] * ((kd.y)*lDotN + ((ks.y)*<span class="built_in">pow</span>((rDotV), (n_s)))); <span class="comment">// g </span></div><div class="line">	po.z = light.color[<span class="number">2</span>] * ((kd.z)*lDotN + ((ks.z)*<span class="built_in">pow</span>((rDotV), (n_s)))); <span class="comment">// b</span></div><div class="line">	<span class="keyword">return</span> po;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">与物体相交</div><div class="line">*/</div><div class="line"><span class="function">intexPoint <span class="title">intersectObjects</span><span class="params">(point p1, point p2, point dir, <span class="keyword">int</span> flag)</span></span></div><div class="line">&#123;</div><div class="line">	point p, q,raySrc, pixPoint;</div><div class="line">	intexPoint intxObj;</div><div class="line">	isIn iO;</div><div class="line">	iO.in = <span class="number">-1</span>;</div><div class="line">	<span class="keyword">double</span> t, t1, t2, tS, tT;</div><div class="line">	<span class="keyword">int</span> id, Obj;</div><div class="line"></div><div class="line">	q = p1;</div><div class="line">	t1 = <span class="number">0</span>;</div><div class="line">	id = <span class="number">-1</span>;</div><div class="line">	Obj = <span class="number">-1</span>;</div><div class="line"></div><div class="line">	</div><div class="line">	raySrc = p1;</div><div class="line">	</div><div class="line"></div><div class="line">	<span class="comment">//找到最近的交点</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num_spheres; i++)</div><div class="line">	&#123;</div><div class="line">		tS = intersectSphere(spheres[i], raySrc, dir);</div><div class="line">		<span class="keyword">if</span> (t1 == <span class="number">0</span> &amp;&amp; tS &gt; <span class="number">1e-10</span>)</div><div class="line">		&#123;</div><div class="line">			t1 = tS;</div><div class="line">			id = i;</div><div class="line">			Obj = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (tS &lt;= t1 &amp;&amp; tS &gt; <span class="number">1e-10</span>)</div><div class="line">		&#123;</div><div class="line">			t1 = tS;</div><div class="line">			id = i;</div><div class="line">			Obj = <span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num_triangles; i++)</div><div class="line">	&#123;</div><div class="line">		tT = intersectTriangle(triangles[i], raySrc, dir, &amp;iO);</div><div class="line">		p = caluPoint(raySrc, dir, tT); <span class="comment">//找到交点</span></div><div class="line">									   <span class="comment">//iO = isInTest(triangles[i], p); //判断p点是否在三角形内</span></div><div class="line"></div><div class="line">		<span class="keyword">if</span> (iO.in == <span class="number">1</span>)</div><div class="line">		&#123;</div><div class="line">			<span class="keyword">if</span> (t1 == <span class="number">0</span> &amp;&amp; tT &gt; <span class="number">1e-5</span>)</div><div class="line">			&#123;</div><div class="line">				t1 = tT;</div><div class="line">				id = i;</div><div class="line">				Obj = <span class="number">2</span>;</div><div class="line">				<span class="keyword">if</span> (flag == <span class="number">0</span>)</div><div class="line">					q = p;</div><div class="line">				intxObj.iO.bary[<span class="number">0</span>] = iO.bary[<span class="number">0</span>];</div><div class="line">				intxObj.iO.bary[<span class="number">1</span>] = iO.bary[<span class="number">1</span>];</div><div class="line">				intxObj.iO.bary[<span class="number">2</span>] = iO.bary[<span class="number">2</span>];</div><div class="line"></div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span> (tT&lt;t1 &amp;&amp; tT&gt;<span class="number">1e-5</span>)</div><div class="line">			&#123;</div><div class="line">				t1 = tT;</div><div class="line">				id = i;</div><div class="line">				Obj = <span class="number">2</span>;</div><div class="line">				<span class="keyword">if</span> (flag == <span class="number">0</span>)</div><div class="line">					q = p;</div><div class="line">				intxObj.iO.bary[<span class="number">0</span>] = iO.bary[<span class="number">0</span>];</div><div class="line">				intxObj.iO.bary[<span class="number">1</span>] = iO.bary[<span class="number">1</span>];</div><div class="line">				intxObj.iO.bary[<span class="number">2</span>] = iO.bary[<span class="number">2</span>];</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">if</span> (flag == <span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		<span class="comment">//如果为1则计算从light到p点的距离t2</span></div><div class="line">		<span class="keyword">if</span> (dir.x != <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			t2 = (p2.x - raySrc.x) / dir.x;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (dir.y != <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			t2 = (p2.y - raySrc.y) / dir.y;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (dir.z != <span class="number">0</span>)</div><div class="line">		&#123;</div><div class="line">			t2 = (p2.z - raySrc.z) / dir.z;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> t2 = <span class="number">0</span>;</div><div class="line"></div><div class="line">		<span class="comment">//t2和t1进行比较，如果t1小于t2则说明没有物体挡住光线	</span></div><div class="line">		<span class="keyword">if</span> (t1 &gt;= t2)</div><div class="line">		&#123;</div><div class="line">			Obj = <span class="number">-1</span>;</div><div class="line">			id = <span class="number">-1</span>;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span> <span class="keyword">if</span> ((t1 &gt;= <span class="number">0</span>) &amp;&amp; (Obj == <span class="number">1</span>))</div><div class="line">		q = caluPoint(raySrc, dir, t1);</div><div class="line"></div><div class="line">	intxObj.p = q;</div><div class="line">	intxObj.t = t1;</div><div class="line">	intxObj.tID = id;</div><div class="line">	intxObj.tObj = Obj;</div><div class="line">	<span class="keyword">return</span> intxObj;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">point <span class="title">findColor</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></div><div class="line">&#123;</div><div class="line">	<span class="comment">//point p, q, dir, light, lightS;</span></div><div class="line">	<span class="comment">//point black, pixColor, temp, tempN;</span></div><div class="line">	<span class="comment">//intexPoint intxObj, intxFlag;</span></div><div class="line"></div><div class="line">	point black, pixColor, p;</div><div class="line">	black.x = <span class="number">0.0</span>;</div><div class="line">	black.y = <span class="number">0.0</span>;</div><div class="line">	black.z = <span class="number">0.0</span>;</div><div class="line">	pixColor = black;</div><div class="line"></div><div class="line">	<span class="comment">//将像素点转换为世界坐标</span></div><div class="line">	p.x = (((<span class="keyword">double</span>)x / (<span class="keyword">double</span>)WIDTH) * <span class="number">2</span> * xMax) - xMax;</div><div class="line">	p.y = (((<span class="keyword">double</span>)y / (<span class="keyword">double</span>)HEIGHT) * <span class="number">2</span> * yMax) - yMax;</div><div class="line">	p.z = <span class="number">-1</span>;</div><div class="line"></div><div class="line">	</div><div class="line">	point dir1, p1 = p;</div><div class="line">	dir1 = minusPoint(p, cam);</div><div class="line">	dir1 = unitize(dir1);</div><div class="line">	pixColor = Render(p, dir1);</div><div class="line">	<span class="keyword">if</span> (pixColor.x &gt; <span class="number">1</span>) pixColor.x = <span class="number">1.f</span>;</div><div class="line">	<span class="keyword">if</span> (pixColor.y &gt; <span class="number">1</span>) pixColor.y = <span class="number">1.f</span>;</div><div class="line">	<span class="keyword">if</span> (pixColor.z &gt; <span class="number">1</span>) pixColor.z = <span class="number">1.f</span>;</div><div class="line">	<span class="keyword">return</span> pixColor;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//迭代渲染</span></div><div class="line"><span class="function">point <span class="title">Render</span><span class="params">(point p, point dir)</span></span></div><div class="line">&#123;</div><div class="line">	Steps++;</div><div class="line">	point blackColor, pixColor, q, light, dir1, temp, temp1;</div><div class="line">	point reflect_ray;</div><div class="line">	intexPoint intxObj, intxFlag;</div><div class="line">	blackColor.x = <span class="number">0.0</span>;</div><div class="line">	blackColor.y = <span class="number">0.0</span>;</div><div class="line">	blackColor.z = <span class="number">0.0</span>;</div><div class="line">	pixColor = blackColor;</div><div class="line">	<span class="keyword">if</span> (Steps &gt; MaxStep)</div><div class="line">	&#123;</div><div class="line">		Steps = <span class="number">0</span>;</div><div class="line">		<span class="keyword">return</span> blackColor;</div><div class="line">	&#125;</div><div class="line">	point p1 = p;</div><div class="line">	intxObj = intersectObjects(p, p1, dir, <span class="number">0</span>);</div><div class="line">	<span class="comment">//如果和一个物体有交点</span></div><div class="line">		<span class="keyword">if</span> (intxObj.tID != <span class="number">-1</span>)</div><div class="line">		&#123;</div><div class="line">			q = intxObj.p;</div><div class="line"></div><div class="line">			reflect_ray = reflect(intxObj, dir);</div><div class="line">			pixColor.x += ambient_light[<span class="number">0</span>];</div><div class="line">			pixColor.y += ambient_light[<span class="number">1</span>];</div><div class="line">			pixColor.z += ambient_light[<span class="number">2</span>];</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">0</span>; h &lt; num_lights; h++)</div><div class="line">			&#123;</div><div class="line">				light.x = lights[h].position[<span class="number">0</span>];</div><div class="line">				light.y = lights[h].position[<span class="number">1</span>];</div><div class="line">				light.z = lights[h].position[<span class="number">2</span>];</div><div class="line"></div><div class="line">				dir1 = minusPoint(light, q);</div><div class="line">				dir1 = unitize(dir1);</div><div class="line">				intxFlag = intersectObjects(q, light, dir1, <span class="number">1</span>);</div><div class="line"></div><div class="line">				<span class="comment">//如果没有物体遮挡</span></div><div class="line">				<span class="keyword">if</span> (intxFlag.tID == <span class="number">-1</span>)</div><div class="line">				&#123;</div><div class="line">					<span class="comment">//phong模型求出颜色</span></div><div class="line">					temp = phong(q, intxObj.tID, intxObj.tObj, intxObj.iO, lights[h], cam);</div><div class="line">					pixColor.x += temp.x;</div><div class="line">					pixColor.y += temp.y;</div><div class="line">					pixColor.z += temp.z;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			temp1 = Render(q, reflect_ray);</div><div class="line">			<span class="keyword">int</span> id = intxObj.tID;</div><div class="line">			<span class="keyword">if</span> (intxObj.tObj == <span class="number">1</span>)</div><div class="line">			&#123;</div><div class="line">				pixColor.x += temp1.x * spheres[id].color_specular[<span class="number">0</span>];</div><div class="line">				pixColor.y += temp1.y * spheres[id].color_specular[<span class="number">1</span>];</div><div class="line">				pixColor.z += temp1.z * spheres[id].color_specular[<span class="number">2</span>];</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span></div><div class="line">			&#123;</div><div class="line">				point tp = chazhi(triangles[id], intxObj.iO, <span class="number">2</span>);</div><div class="line">				pixColor.x += temp1.x * tp.x;</div><div class="line">				pixColor.y += temp1.y * tp.y;</div><div class="line">				pixColor.z += temp1.z * tp.z;</div><div class="line">			&#125;</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span></div><div class="line">		&#123;</div><div class="line">			pixColor = blackColor;</div><div class="line">			Steps = <span class="number">0</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> pixColor;</div><div class="line">&#125;</div><div class="line"><span class="comment">//反射的光线的方向</span></div><div class="line"></div><div class="line"><span class="function">point <span class="title">reflect</span><span class="params">(intexPoint intx, point dir)</span></span></div><div class="line">&#123;</div><div class="line">	point result;</div><div class="line">	point n;</div><div class="line">	<span class="keyword">if</span> (intx.tObj == <span class="number">1</span>)</div><div class="line">	&#123;</div><div class="line">		n = findSphereNormal(intx.p, intx.tID);</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">		n = unitize(chazhi(triangles[intx.tID], intx.iO, <span class="number">0</span>));</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	dir.x = -dir.x;</div><div class="line">	dir.y = -dir.y;</div><div class="line">	dir.z = -dir.z;</div><div class="line">	<span class="keyword">double</span> r1 = dot(n, dir);</div><div class="line">	point n2;</div><div class="line">	n2.x = n.x * <span class="number">2</span> * r1;</div><div class="line">	n2.y = n.y * <span class="number">2</span> * r1;</div><div class="line">	n2.z = n.z * <span class="number">2</span> * r1;</div><div class="line">	</div><div class="line">	result = n2;</div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">drawColor</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	<span class="keyword">unsigned</span> <span class="keyword">int</span> x, y;</div><div class="line">	point pixColor;</div><div class="line"></div><div class="line">	<span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; WIDTH; x++)</div><div class="line">	&#123;</div><div class="line">		<span class="keyword">for</span> (y = <span class="number">0</span>; y &lt; HEIGHT; y++)</div><div class="line">		&#123;</div><div class="line">			pixColor = findColor(x, y);</div><div class="line"></div><div class="line">			plot_pixel_jpeg(x, y, <span class="built_in">abs</span>(pixColor.x) * <span class="number">255</span>, <span class="built_in">abs</span>(pixColor.y) * <span class="number">255</span>, <span class="built_in">abs</span>(pixColor.z) * <span class="number">255</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"><span class="comment">//MODIFY THIS FUNCTION</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">draw_scene</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> x,y;</div><div class="line"></div><div class="line">  <span class="comment">//glPointSize(2.0);</span></div><div class="line">  <span class="comment">//glBegin(GL_POINTS);</span></div><div class="line">  <span class="comment">//simple output</span></div><div class="line">  <span class="keyword">for</span>(x=<span class="number">0</span>; x&lt;WIDTH; x++)</div><div class="line">  &#123;</div><div class="line">glPointSize(<span class="number">2.0</span>);  </div><div class="line">glBegin(GL_POINTS);</div><div class="line"><span class="keyword">for</span>(y=<span class="number">0</span>;y &lt; HEIGHT;y++)</div><div class="line">&#123;</div><div class="line"> <span class="comment">// plot_pixel(x,y,x%256,y%256,(x+y)%256);</span></div><div class="line">		plot_pixel_display(x, y, buffer[HEIGHT - y - <span class="number">1</span>][x][<span class="number">0</span>], buffer[HEIGHT - y - <span class="number">1</span>][x][<span class="number">1</span>], buffer[HEIGHT - y - <span class="number">1</span>][x][<span class="number">2</span>]);</div><div class="line">&#125;</div><div class="line">glEnd();</div><div class="line">glFlush();</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"Done!\n"</span>); fflush(<span class="built_in">stdout</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel_display</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g,<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span></div><div class="line">&#123;</div><div class="line">  glColor3f(((<span class="keyword">double</span>)r)/<span class="number">256.f</span>,((<span class="keyword">double</span>)g)/<span class="number">256.f</span>,((<span class="keyword">double</span>)b)/<span class="number">256.f</span>);</div><div class="line">  glVertex2i(x,y);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel_jpeg</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g,<span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span></div><div class="line">&#123;</div><div class="line">  buffer[HEIGHT-y<span class="number">-1</span>][x][<span class="number">0</span>]=r;</div><div class="line">  buffer[HEIGHT-y<span class="number">-1</span>][x][<span class="number">1</span>]=g;</div><div class="line">  buffer[HEIGHT-y<span class="number">-1</span>][x][<span class="number">2</span>]=b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">plot_pixel</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">unsigned</span> <span class="keyword">char</span> r,<span class="keyword">unsigned</span> <span class="keyword">char</span> g, <span class="keyword">unsigned</span> <span class="keyword">char</span> b)</span></span></div><div class="line">&#123;</div><div class="line">  plot_pixel_display(x,y,r,g,b);</div><div class="line">  <span class="keyword">if</span>(mode == MODE_JPEG)</div><div class="line">  plot_pixel_jpeg(x,y,r,g,b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*void save_jpg()</span></div><div class="line">&#123;</div><div class="line">  Pic *in = NULL;</div><div class="line"></div><div class="line">  in = pic_alloc(640, 480, 3, NULL);</div><div class="line">  printf("Saving JPEG file: %s\n", filename);</div><div class="line"></div><div class="line">  memcpy(in-&gt;pix,buffer,3*WIDTH*HEIGHT);</div><div class="line">  if (jpeg_write(filename, in))</div><div class="line">printf("File saved Successfully\n");</div><div class="line">  else</div><div class="line">printf("Error in Saving\n");</div><div class="line"></div><div class="line">  pic_free(in);  </div><div class="line"></div><div class="line">&#125;*/</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">parse_check</span><span class="params">(<span class="keyword">char</span> *expected,<span class="keyword">char</span> *found)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span>(stricmp(expected,found))</div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> error[<span class="number">100</span>];</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"Expected '%s ' found '%s '\n"</span>,expected,found);</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"Parse error, abnormal abortion\n"</span>);</div><div class="line">  <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">parse_doubles</span><span class="params">(FILE*file, <span class="keyword">char</span> *check, <span class="keyword">double</span> p[<span class="number">3</span>])</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> str[<span class="number">100</span>];</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%s"</span>,str);</div><div class="line">  parse_check(check,str);</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%lf %lf %lf"</span>,&amp;p[<span class="number">0</span>],&amp;p[<span class="number">1</span>],&amp;p[<span class="number">2</span>]);</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"%s %lf %lf %lf\n"</span>,check,p[<span class="number">0</span>],p[<span class="number">1</span>],p[<span class="number">2</span>]);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">parse_rad</span><span class="params">(FILE*file,<span class="keyword">double</span> *r)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> str[<span class="number">100</span>];</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%s"</span>,str);</div><div class="line">  parse_check(<span class="string">"rad:"</span>,str);</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%lf"</span>,r);</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"rad: %f\n"</span>,*r);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">parse_shi</span><span class="params">(FILE*file,<span class="keyword">double</span> *shi)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">char</span> s[<span class="number">100</span>];</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%s"</span>,s);</div><div class="line">  parse_check(<span class="string">"shi:"</span>,s);</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%lf"</span>,shi);</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"shi: %f\n"</span>,*shi);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">loadScene</span><span class="params">(<span class="keyword">char</span> *argv)</span></span></div><div class="line">&#123;</div><div class="line">  FILE *file = fopen(argv,<span class="string">"r"</span>);</div><div class="line">  <span class="keyword">int</span> number_of_objects;</div><div class="line">  <span class="keyword">char</span> type[<span class="number">50</span>];</div><div class="line">  <span class="keyword">int</span> i;</div><div class="line">  Triangle t;</div><div class="line">  Sphere s;</div><div class="line">  Light l;</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%i"</span>,&amp;number_of_objects);</div><div class="line"></div><div class="line">  <span class="built_in">printf</span>(<span class="string">"number of objects: %i\n"</span>,number_of_objects);</div><div class="line">  <span class="keyword">char</span> str[<span class="number">200</span>];</div><div class="line"></div><div class="line">  parse_doubles(file,<span class="string">"amb:"</span>,ambient_light);</div><div class="line"></div><div class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i &lt; number_of_objects;i++)</div><div class="line">&#123;</div><div class="line">  <span class="built_in">fscanf</span>(file,<span class="string">"%s\n"</span>,type);</div><div class="line">  <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,type);</div><div class="line">  <span class="keyword">if</span>(stricmp(type,<span class="string">"triangle"</span>)==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line"></div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"found triangle\n"</span>);</div><div class="line">	  <span class="keyword">int</span> j;</div><div class="line"></div><div class="line">	  <span class="keyword">for</span>(j=<span class="number">0</span>;j &lt; <span class="number">3</span>;j++)</div><div class="line">	&#123;</div><div class="line">	  parse_doubles(file,<span class="string">"pos:"</span>,t.v[j].position);</div><div class="line">	  parse_doubles(file,<span class="string">"nor:"</span>,t.v[j].normal);</div><div class="line">	  parse_doubles(file,<span class="string">"dif:"</span>,t.v[j].color_diffuse);</div><div class="line">	  parse_doubles(file,<span class="string">"spe:"</span>,t.v[j].color_specular);</div><div class="line">	  parse_shi(file,&amp;t.v[j].shininess);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	  <span class="keyword">if</span>(num_triangles == MAX_TRIANGLES)</div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"too many triangles, you should increase MAX_TRIANGLES!\n"</span>);</div><div class="line">	  <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	  triangles[num_triangles++] = t;</div><div class="line">	&#125;</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(stricmp(type,<span class="string">"sphere"</span>)==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"found sphere\n"</span>);</div><div class="line"></div><div class="line">	  parse_doubles(file,<span class="string">"pos:"</span>,s.position);</div><div class="line">	  parse_rad(file,&amp;s.radius);</div><div class="line">	  parse_doubles(file,<span class="string">"dif:"</span>,s.color_diffuse);</div><div class="line">	  parse_doubles(file,<span class="string">"spe:"</span>,s.color_specular);</div><div class="line">	  parse_shi(file,&amp;s.shininess);</div><div class="line"></div><div class="line">	  <span class="keyword">if</span>(num_spheres == MAX_SPHERES)</div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"too many spheres, you should increase MAX_SPHERES!\n"</span>);</div><div class="line">	  <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	  spheres[num_spheres++] = s;</div><div class="line">	&#125;</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(stricmp(type,<span class="string">"light"</span>)==<span class="number">0</span>)</div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"found light\n"</span>);</div><div class="line">	  parse_doubles(file,<span class="string">"pos:"</span>,l.position);</div><div class="line">	  parse_doubles(file,<span class="string">"col:"</span>,l.color);</div><div class="line"></div><div class="line">	  <span class="keyword">if</span>(num_lights == MAX_LIGHTS)</div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"too many lights, you should increase MAX_LIGHTS!\n"</span>);</div><div class="line">	  <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">	  lights[num_lights++] = l;</div><div class="line">	&#125;</div><div class="line">  <span class="keyword">else</span></div><div class="line">	&#123;</div><div class="line">	  <span class="built_in">printf</span>(<span class="string">"unknown type in scene description:\n%s\n"</span>,type);</div><div class="line">	  <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">  <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">	cam.x = <span class="number">0.0</span>;</div><div class="line">	cam.y = <span class="number">0.0</span>;</div><div class="line">	cam.z = <span class="number">0.0</span>;</div><div class="line">	glLoadIdentity();</div><div class="line"></div><div class="line">	drawColor();</div><div class="line">	draw_scene();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  glMatrixMode(GL_PROJECTION);</div><div class="line">  glOrtho(<span class="number">0</span>,WIDTH,<span class="number">0</span>,HEIGHT,<span class="number">1</span>,<span class="number">-1</span>);</div><div class="line">  glMatrixMode(GL_MODELVIEW);</div><div class="line">  glLoadIdentity();</div><div class="line"></div><div class="line">  glClearColor(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">  glClear(GL_COLOR_BUFFER_BIT);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">idle</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">  <span class="comment">//hack to make it only draw once</span></div><div class="line">  <span class="keyword">static</span> <span class="keyword">int</span> once=<span class="number">0</span>;</div><div class="line">  <span class="keyword">if</span> (!once)</div><div class="line">  &#123;</div><div class="line">	  draw_scene();</div><div class="line"><span class="comment">//	  if (mode == MODE_JPEG)</span></div><div class="line"><span class="comment">//		  save_jpg();</span></div><div class="line">  &#125;</div><div class="line">  once=<span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> ** argv)</span></span></div><div class="line">&#123;</div><div class="line">  <span class="keyword">if</span> (argc&lt;<span class="number">2</span> || argc &gt; <span class="number">3</span>)</div><div class="line">  &#123;  </div><div class="line"><span class="built_in">printf</span> (<span class="string">"usage: %s &lt;scenefile&gt; [jpegname]\n"</span>, argv[<span class="number">0</span>]);</div><div class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">if</span>(argc == <span class="number">3</span>)</div><div class="line">&#123;</div><div class="line">  mode = MODE_JPEG;</div><div class="line">  filename = argv[<span class="number">2</span>];</div><div class="line">&#125;</div><div class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(argc == <span class="number">2</span>)</div><div class="line">mode = MODE_DISPLAY;</div><div class="line"></div><div class="line">  glutInit(&amp;argc,argv);</div><div class="line">  loadScene(argv[<span class="number">1</span>]);</div><div class="line"></div><div class="line">  glutInitDisplayMode(GLUT_RGBA | GLUT_SINGLE);</div><div class="line">  glutInitWindowPosition(<span class="number">0</span>,<span class="number">0</span>);</div><div class="line">  glutInitWindowSize(WIDTH,HEIGHT);</div><div class="line">  <span class="keyword">int</span> window = glutCreateWindow(<span class="string">"Ray Tracer"</span>);</div><div class="line">  glutDisplayFunc(display);</div><div class="line">  glutIdleFunc(idle);</div><div class="line">  init();</div><div class="line">  glutMainLoop();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><ul>
<li>运行结果如图所示<br><img src="http://i.imgur.com/u7btlLQ.png" alt=""></li>
</ul>
<p><img src="http://i.imgur.com/zvUZ8zG.png" alt=""></p>
<p><img src="http://i.imgur.com/w2Hycqc.png" alt=""></p>
<p><img src="http://i.imgur.com/6JP7yT5.png" alt=""></p>
<p><img src="http://i.imgur.com/mgG1lMe.png" alt=""></p>
<p><img src="http://i.imgur.com/Psy2hXj.png" alt=""></p>
<p><img src="http://i.imgur.com/urixOzm.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目要求&quot;&gt;&lt;a href=&quot;#题目要求&quot; class=&quot;headerlink&quot; title=&quot;题目要求&quot;&gt;&lt;/a&gt;题目要求&lt;/h2&gt;&lt;p&gt;本程序是根据&lt;a href=&quot;http://run.usc.edu/cs480-s13/assignments/assign
    
    </summary>
    
      <category term="计算机图形学" scheme="http://bin2415.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
    
      <category term="计算机图形学" scheme="http://bin2415.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>ExploitTutorial</title>
    <link href="http://bin2415.github.io/2016/04/13/ExploitTutorial/"/>
    <id>http://bin2415.github.io/2016/04/13/ExploitTutorial/</id>
    <published>2016-04-13T07:27:07.000Z</published>
    <updated>2017-05-16T07:38:24.862Z</updated>
    
    <content type="html"><![CDATA[<h3 id="声明：本博客是根据Exploit该链接所写"><a href="#声明：本博客是根据Exploit该链接所写" class="headerlink" title="声明：本博客是根据Exploit该链接所写"></a>声明：本博客是根据<a href="https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/" target="_blank" rel="external">Exploit</a>该链接所写</h3><hr>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>实验环境：windows xp windows xp sp3</li>
<li></li>
<li>下载easyRmtomp3.exe,下载地址：<a href="https://www.exploit-db.com/apps/707414955696c57b71c7f160c720bed5-EasyRMtoMP3Converter.exe" target="_blank" rel="external">https://www.exploit-db.com/apps/707414955696c57b71c7f160c720bed5-EasyRMtoMP3Converter.exe</a></li>
</ul>
<hr>
<h3 id="使程序crash"><a href="#使程序crash" class="headerlink" title="使程序crash"></a>使程序crash</h3><ul>
<li>编写一个程序生成10000个字符，可以使程序crash，程序如图所示</li>
</ul>
<p><img src="http://i.imgur.com/mwATA96.png" alt="图1"></p>
<ul>
<li>crash的程序如下图所示：</li>
</ul>
<p><img src="http://i.imgur.com/20ltmX6.png" alt="图2"></p>
<p>但没有出现崩溃，可见改程序采取了保护措施，将A的数量增加，增加到20000时，也不会崩溃，当增加到30000时，程序崩溃。如图所示：</p>
<p><img src="http://i.imgur.com/IVtRxc0.png" alt="图3"></p>
<p>会出现地址指针EIP指向0x41414141地址，由于找不到改地址所以该程序会发生崩溃。</p>
<hr>
<h3 id="栈信息介绍"><a href="#栈信息介绍" class="headerlink" title="栈信息介绍"></a>栈信息介绍</h3><p>栈的信息如下图所示：</p>
<p><img src="http://i.imgur.com/mGAjPTR.png" alt="图4"></p>
<hr>
<h3 id="确定return的地址偏移"><a href="#确定return的地址偏移" class="headerlink" title="确定return的地址偏移"></a>确定return的地址偏移</h3><ul>
<li>构造buffer字符串，生成25000个’A’和5000个’B’时，观察EIP的数值<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt; </div><div class="line"></div><div class="line">int main() </div><div class="line">&#123; </div><div class="line">    </div><div class="line"> FILE* fp = NULL; </div><div class="line"> </div><div class="line">   fp = fopen(&quot;crash2.m3u&quot;,&quot;w+&quot;);</div><div class="line">    </div><div class="line">    int i = 0;</div><div class="line">    if(fp == NULL)</div><div class="line">    return;</div><div class="line">    for(i;i &lt; 25000; i++)</div><div class="line">    &#123;</div><div class="line">        fprintf(fp,&quot;\x41&quot;);</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; 5000; i++)</div><div class="line">    &#123;</div><div class="line">        fprintf(fp, &quot;\x42&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>调试结果如图所示：</p>
<p><img src="http://i.imgur.com/ZXmeTz4.png" alt=""></p>
<p>可以知道EIP为0x42424242,所以return地址偏移在25000和30000之间</p>
<ul>
<li>测试eip的offset具体在什么位置</li>
</ul>
<p>利用metasploit的工具测试具体在什么位置，具体如下：cd metasplot-framework/tools</p>
<p>./pattern_create.rb 5000 &gt; mima.txt 生成5000大小的字符串并输出到mima.txt文件</p>
<p>构建前25000个为A，后5000个位mima.txt为内容的.m3u文件，如图所示：</p>
<p><img src="http://i.imgur.com/lsg0d4l.png" alt=""></p>
<p>得到的eip结果如下图所示：</p>
<p><img src="http://i.imgur.com/WTx76bu.png" alt=""></p>
<p>可知eip的值为0x42316A42</p>
<p>然后利用metasploit工具找到具体是什么位置，命令如下：.pattern_offset.rb 0x423116A42 5000,得到结果为1053</p>
<p>测试一下1053是否正确，编写如下程序：</p>
<p><img src="http://i.imgur.com/27N33ZK.png" alt=""></p>
<p>运行测试一下，结果如下图：</p>
<p><img src="http://i.imgur.com/BIIpz22.png" alt=""></p>
<p>可以看到eip指向的是0x42424242，所以找到的return的地址偏移是正确的</p>
<hr>
<h3 id="该教程先写到这，有空再继续-＾－＾-V"><a href="#该教程先写到这，有空再继续-＾－＾-V" class="headerlink" title="该教程先写到这，有空再继续(＾－＾)V"></a>该教程先写到这，有空再继续(＾－＾)V</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;声明：本博客是根据Exploit该链接所写&quot;&gt;&lt;a href=&quot;#声明：本博客是根据Exploit该链接所写&quot; class=&quot;headerlink&quot; title=&quot;声明：本博客是根据Exploit该链接所写&quot;&gt;&lt;/a&gt;声明：本博客是根据&lt;a href=&quot;https
    
    </summary>
    
      <category term="反汇编" scheme="http://bin2415.github.io/categories/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
    
      <category term="反汇编" scheme="http://bin2415.github.io/tags/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
      <category term="Exploit" scheme="http://bin2415.github.io/tags/Exploit/"/>
    
  </entry>
  
</feed>
